var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.9","fields":["title","body"],"fieldVectors":[["title/controllers/AppController.html",[0,1.083,1,1.858]],["body/controllers/AppController.html",[0,1.774,1,3.044,2,1.445,3,0.523,4,0.45,5,0.45,6,3.292,7,0.642,8,0.039,9,0.959,10,2.618,11,3.292,12,0.523,13,0.026,14,2.827,15,1.772,16,0.032,17,0.032]],["title/modules/AppModule.html",[18,1.083,19,1.858]],["body/modules/AppModule.html",[1,2.771,2,1.407,3,0.367,4,0.316,5,0.316,7,0.687,8,0.039,9,0.673,10,2.587,11,2.309,12,0.367,13,0.018,16,0.025,17,0.025,18,1.616,19,3.565,20,1.725,21,1.243,22,1.544,23,1.544,24,1.243,25,2.461,26,1.544,27,2.309,28,2.309,29,2.309,30,2.587,31,2.89,32,2.327,33,2.143,34,1.544,35,1.382,36,2.805,37,2.413,38,2.805,39,2.805,40,2.805,41,2.805,42,1.739,43,2.309]],["title/injectables/AppService.html",[10,1.477,44,1.083]],["body/injectables/AppService.html",[3,0.501,4,0.431,5,0.431,7,0.501,8,0.038,9,0.918,10,2.355,12,0.501,13,0.025,16,0.031,17,0.031,44,1.727,45,2.108,46,3.153,47,0.824,48,2.355,49,5.458,50,1.131,51,3.829,52,1.887,53,1.727,54,1.887,55,3.829,56,3.829]],["title/controllers/AuthController.html",[0,1.083,57,1.858]],["body/controllers/AuthController.html",[0,1.429,2,1.429,3,0.517,4,0.445,5,0.445,7,0.638,8,0.039,9,0.948,12,0.517,13,0.026,14,2.796,15,1.753,16,0.032,17,0.032,57,3.023,58,3.256,59,2.796,60,3.955,61,2.343,62,3.256,63,3.955]],["title/modules/AuthModule.html",[18,1.083,30,1.477]],["body/modules/AuthModule.html",[2,1.517,3,0.41,4,0.353,5,0.353,7,0.661,8,0.038,9,0.751,12,0.41,13,0.02,16,0.027,17,0.027,18,1.711,20,1.388,21,1.388,22,1.724,23,1.724,24,1.388,25,2.606,26,2.606,30,2.731,32,1.86,33,2.311,34,1.724,35,1.543,37,1.942,57,2.934,61,2.595,62,2.579,64,2.579,65,2.579,66,2.579,67,3.133,68,2.602,69,3.133,70,2.579]],["title/injectables/AuthService.html",[44,1.083,61,1.329]],["body/injectables/AuthService.html",[3,0.364,4,0.313,5,0.313,7,0.506,8,0.039,9,0.667,12,0.364,13,0.018,15,1.233,16,0.025,17,0.025,44,1.399,45,1.532,47,0.599,48,1.907,50,1.315,52,1.907,53,2.036,54,1.907,61,1.716,68,1.725,71,2.291,72,2.883,73,3.962,74,3.872,75,2.4,76,2.783,77,2.023,78,2.783,79,2.131,80,2.131,81,1.143,82,1.716,83,3.187,84,2.783,85,2.783,86,3.872,87,3.665,88,2.76,89,2.783,90,1.967,91,2.291,92,2.291,93,2.291,94,1.725,95,1.967,96,1.371,97,2.783,98,2.783,99,2.291]],["title/classes/CreateMetaOptionsDto.html",[13,0.019,100,1.858]],["body/classes/CreateMetaOptionsDto.html",[3,0.46,4,0.396,5,0.396,7,0.46,8,0.038,12,0.46,13,0.029,16,0.029,17,0.029,47,0.756,50,1.336,53,1.636,81,1.336,100,2.806,101,1.557,102,3.539,103,2.219,104,2.892,105,2.006,106,3.539,107,3.539,108,2.006,109,3.513,110,3.513,111,3.738,112,3.513,113,3.199,114,1.731]],["title/classes/CreatePostDto.html",[13,0.019,115,1.65]],["body/classes/CreatePostDto.html",[3,0.183,4,0.158,5,0.158,7,0.523,8,0.039,12,0.183,13,0.019,16,0.015,17,0.015,47,0.302,50,1.387,53,1.835,81,1.538,82,2.082,99,2.779,100,2.092,101,0.621,102,3.401,103,2.023,105,1.293,106,0.991,107,0.991,108,2.082,111,2.828,113,2.828,114,0.691,115,1.265,116,0.991,117,3.066,118,2.919,119,2.919,120,3.63,121,2.919,122,2.919,123,2.919,124,2.912,125,2.919,126,3.478,127,1.402,128,1.402,129,1.402,130,2.297,131,2.297,132,1.402,133,1.402,134,2.297,135,1.891,136,1.891,137,2.297,138,1.402,139,1.402,140,1.402,141,1.402,142,1.825,143,2.779,144,2.297,145,1.424,146,1.891,147,1.402,148,1.402,149,2.297,150,1.402,151,1.402,152,1.154,153,2.297,154,2.297,155,2.919,156,2.297,157,2.297,158,1.402,159,1.402,160,1.402,161,2.297,162,1.402,163,1.402,164,1.891,165,1.891,166,1.891,167,1.891,168,1.402,169,1.402,170,1.402,171,3.375,172,1.402,173,1.402,174,1.402,175,2.919,176,1.402,177,1.402,178,2.297,179,2.297,180,2.986,181,2.297,182,1.154,183,1.154,184,1.154,185,2.297,186,0.991,187,1.402,188,1.402,189,0.991,190,1.402,191,3.066,192,3.294,193,0.691,194,1.891,195,1.154,196,1.424,197,2.297,198,1.154,199,1.402,200,1.402,201,1.402,202,1.402]],["title/classes/CreateUserDto.html",[13,0.019,203,1.65]],["body/classes/CreateUserDto.html",[3,0.36,4,0.31,5,0.31,7,0.36,8,0.038,12,0.36,13,0.025,16,0.025,17,0.025,47,0.592,50,1.414,53,1.974,81,1.414,87,3.643,90,3.128,101,1.219,105,1.702,108,2.122,111,3.385,113,3.385,114,1.355,180,2.715,182,2.265,183,2.265,184,2.265,194,3.162,195,3.162,203,2.114,204,4.147,205,1.945,206,3.643,207,4.425,208,2.751,209,2.751,210,2.751,211,2.751,212,2.751,213,2.751,214,2.751,215,3.841,216,3.841,217,3.841,218,3.841,219,3.841,220,3.841,221,2.114,222,2.751,223,3.841,224,2.751,225,2.751]],["title/classes/GetUsersParamDto.html",[13,0.019,226,1.65]],["body/classes/GetUsersParamDto.html",[3,0.426,4,0.367,5,0.367,7,0.632,8,0.039,12,0.426,13,0.031,16,0.028,17,0.028,42,2.672,47,0.701,50,0.963,81,1.426,82,1.91,88,3.312,96,2.123,101,1.445,105,1.91,108,1.445,114,1.606,142,1.303,152,2.684,180,3.047,186,2.304,192,3.548,193,1.606,196,2.672,221,2.658,226,2.373,227,3.548,228,2.684,229,4.31,230,3.26,231,3.26,232,3.548,233,3.26]],["title/classes/PatchPostDto.html",[13,0.019,234,1.858]],["body/classes/PatchPostDto.html",[3,0.436,4,0.375,5,0.375,7,0.639,8,0.038,12,0.436,13,0.028,16,0.028,17,0.028,47,0.717,50,0.985,81,0.985,88,3.337,101,1.478,103,1.939,105,1.939,108,1.478,114,1.643,115,1.836,116,2.357,142,1.334,189,2.357,191,3.602,193,1.643,221,2.408,232,3.602,234,2.712,235,3.602,236,3.602,237,4.375,238,3.335,239,3.602,240,3.335,241,3.335,242,2.745,243,3.335,244,2.745,245,2.745]],["title/classes/PatchUserDto.html",[13,0.019,246,1.858]],["body/classes/PatchUserDto.html",[3,0.523,4,0.45,5,0.45,7,0.642,8,0.038,12,0.523,13,0.026,16,0.032,17,0.032,101,1.772,189,2.827,203,2.201,205,2.827,236,4.042,242,3.292,246,3.044,247,3.292,248,4.91,249,3.292,250,3.292,251,3.292]],["title/injectables/PostServices.html",[44,1.083,252,1.477]],["body/injectables/PostServices.html",[3,0.379,4,0.326,5,0.326,7,0.52,8,0.039,9,0.694,12,0.379,13,0.019,15,1.283,16,0.026,17,0.026,42,3.286,44,1.438,45,1.593,47,0.623,48,1.96,50,1.175,52,1.426,53,1.643,54,1.426,72,2.502,75,2.466,77,2.12,79,2.19,80,2.19,81,1.175,82,1.763,92,2.383,94,1.794,95,2.046,96,1.426,117,3.275,126,3.275,252,1.96,253,2.383,254,3.275,255,2.894,256,2.894,257,3.978,258,2.894,259,2.383,260,2.383,261,3.978,262,2.894,263,2.894,264,2.894,265,2.894,266,2.894]],["title/controllers/PostsController.html",[0,1.083,267,1.858]],["body/controllers/PostsController.html",[0,0.758,2,0.758,3,0.274,4,0.236,5,0.236,7,0.591,8,0.039,9,0.503,12,0.274,13,0.014,14,1.482,15,0.929,16,0.02,17,0.02,43,2.596,47,0.451,48,1.554,50,1.119,52,1.868,53,1.37,54,1.033,59,1.482,72,2.856,79,2.087,80,2.087,81,1.119,82,1.68,103,1.869,108,1.68,115,2.615,124,1.955,142,1.686,193,1.033,234,2.614,244,2.596,245,2.596,252,1.554,259,2.596,267,1.955,268,1.726,269,2.097,270,3.154,271,3.154,272,3.154,273,2.097,274,3.154,275,3.154,276,2.98,277,4.216,278,3.154,279,4.75,280,3.154,281,2.097,282,2.097,283,3.154,284,2.097,285,3.154,286,2.097,287,2.097,288,3.154,289,2.097,290,2.097,291,3.154,292,1.726,293,1.726,294,2.596,295,1.726,296,3.121,297,3.121,298,1.726,299,1.726,300,1.726,301,2.097,302,2.097,303,2.097,304,2.097,305,2.097,306,2.596,307,2.596,308,2.097,309,2.097,310,2.097,311,2.097]],["title/modules/PostsModule.html",[18,1.083,31,1.65]],["body/modules/PostsModule.html",[2,1.539,3,0.419,4,0.361,5,0.361,7,0.667,8,0.038,9,0.768,12,0.419,13,0.021,16,0.028,17,0.028,18,1.73,20,1.419,21,1.419,22,1.763,23,1.763,24,1.419,25,2.635,26,1.763,31,3.116,32,2.42,33,2.345,34,1.763,35,1.578,37,2.64,70,2.636,252,2.691,267,2.967,295,2.636,312,2.636,313,3.202,314,2.636,315,3.202,316,3.202]],["title/controllers/UsersController.html",[0,1.083,317,1.858]],["body/controllers/UsersController.html",[0,0.627,2,0.627,3,0.227,4,0.195,5,0.195,7,0.576,8,0.038,9,0.416,12,0.227,13,0.011,15,0.769,16,0.018,17,0.018,42,1.69,47,0.373,48,1.343,50,0.994,52,1.659,53,0.627,54,1.88,59,1.226,72,2.701,75,1.075,77,1.09,79,1.854,80,2.283,81,1.36,82,1.492,83,1.428,94,1.075,96,1.88,103,1.691,108,1.492,124,1.075,135,3.142,136,3.142,142,2.008,145,2.729,193,0.855,196,2.366,203,2.424,221,2.764,226,2.424,246,2.571,251,2.244,260,1.428,276,1.927,292,2.244,293,1.428,294,2.772,296,2.244,297,2.244,298,1.428,299,1.428,300,1.428,306,1.428,307,1.428,317,1.69,318,1.428,319,2.726,320,3.367,321,2.726,322,1.735,323,1.735,324,1.735,325,3.625,326,1.735,327,2.726,328,2.726,329,1.735,330,2.726,331,2.726,332,2.726,333,2.244,334,1.735,335,1.735,336,2.726,337,1.735,338,1.735,339,1.735,340,3.367,341,1.735,342,1.735,343,1.735,344,1.735,345,1.735,346,3.367,347,1.735,348,1.735,349,1.428,350,1.428,351,1.428,352,3.367,353,1.735,354,1.735,355,1.735,356,1.735,357,1.735,358,1.735,359,1.735,360,1.735,361,1.735,362,1.735,363,1.735,364,1.735,365,1.735,366,1.735,367,1.735]],["title/modules/UsersModule.html",[18,1.083,32,1.329]],["body/modules/UsersModule.html",[2,1.517,3,0.41,4,0.353,5,0.353,7,0.661,8,0.038,9,0.751,12,0.41,13,0.02,16,0.027,17,0.027,18,1.711,20,1.388,21,1.388,22,1.724,23,1.724,24,1.388,25,2.606,26,2.606,30,2.068,32,2.457,33,2.311,34,1.724,35,1.543,37,1.942,68,2.602,77,2.342,317,2.934,351,2.579,368,2.579,369,2.579,370,2.579,371,3.133,372,3.133,373,3.133]],["title/injectables/UsersService.html",[44,1.083,77,1.199]],["body/injectables/UsersService.html",[3,0.275,4,0.237,5,0.237,7,0.497,8,0.04,9,0.504,12,0.275,13,0.025,15,0.932,16,0.02,17,0.02,44,1.142,45,1.158,47,0.452,48,1.557,50,1.121,52,1.557,53,1.636,54,1.557,61,2.186,68,1.304,72,2.618,73,1.731,75,1.959,77,1.264,79,2.09,80,2.09,81,1.121,82,1.683,88,3.058,90,2.985,91,1.731,93,1.731,94,1.304,95,1.487,96,2.43,142,0.841,145,2.354,206,3.476,221,2.715,226,2.618,254,3.126,325,3.126,349,1.731,350,1.731,374,1.731,375,3.161,376,2.602,377,3.161,378,2.103,379,2.103,380,2.103,381,2.103,382,4.223,383,3.161,384,2.103,385,2.103,386,2.103,387,2.103,388,3.161,389,3.161,390,2.103,391,2.103,392,2.103,393,2.103,394,2.103]],["title/coverage.html",[395,2.88]],["body/coverage.html",[0,1.736,1,1.719,5,0.312,6,2.282,8,0.038,10,1.366,13,0.034,16,0.025,17,0.025,24,1.229,44,1.736,46,2.282,57,1.719,58,2.282,61,1.229,71,2.282,77,1.109,81,0.819,96,1.366,100,1.719,102,2.729,103,1.229,104,2.282,115,1.526,116,2.729,203,1.526,204,2.282,205,2.729,226,1.526,227,2.282,228,2.282,234,1.719,235,2.282,246,1.719,247,2.282,252,1.366,253,2.282,267,1.719,268,2.282,276,1.96,317,1.719,318,2.282,374,2.282,376,2.282,395,1.96,396,2.282,397,2.772,398,2.772,399,5.821,400,4.805,401,4.443,402,4.443,403,2.282,404,2.772,405,3.861,406,2.772,407,2.772,408,2.772,409,2.772,410,2.772]],["title/dependencies.html",[21,1.596,411,2.068]],["body/dependencies.html",[8,0.039,9,0.913,13,0.031,16,0.031,17,0.031,21,1.688,114,1.877,186,2.693,193,1.877,249,3.136,250,3.136,412,3.809,413,3.809,414,5.199,415,3.809,416,3.809,417,3.809,418,3.809,419,3.809,420,3.809,421,3.809,422,3.809,423,3.809,424,3.809,425,3.809,426,3.809]],["title/miscellaneous/enumerations.html",[427,1.557,428,2.965]],["body/miscellaneous/enumerations.html",[8,0.038,16,0.03,17,0.03,47,0.79,103,2.064,107,4.118,120,3.834,124,2.887,145,2.887,146,3.834,164,3.834,165,3.834,166,3.834,167,3.834,198,3.834,427,2.277,428,3.024,429,3.674,430,3.674,431,3.674,432,3.674]],["title/miscellaneous/functions.html",[427,1.557,433,2.965]],["body/miscellaneous/functions.html",[8,0.034,16,0.034,17,0.034,24,2.47,47,0.961,403,3.679,427,2.77,433,3.679,434,4.468]],["title/index.html",[47,0.54,435,2.512,436,2.512]],["body/index.html",[4,0.207,8,0.036,16,0.018,17,0.018,35,2.221,106,1.298,142,0.734,143,1.512,196,2.44,239,1.512,333,3.711,395,1.298,396,2.346,437,1.836,438,1.836,439,3.492,440,2.849,441,1.836,442,1.836,443,1.836,444,1.836,445,2.849,446,3.492,447,1.836,448,1.836,449,1.836,450,3.935,451,1.836,452,4.862,453,1.836,454,4.704,455,1.836,456,1.836,457,1.836,458,2.849,459,1.836,460,2.849,461,1.836,462,3.492,463,1.836,464,2.849,465,1.836,466,1.836,467,1.836,468,1.836,469,1.836,470,3.935,471,4.862,472,2.849,473,1.836,474,1.836,475,1.836,476,1.836,477,4.508,478,2.849,479,3.935,480,1.836,481,2.849,482,1.836,483,1.836,484,2.849,485,4.508,486,3.935,487,1.836,488,2.849,489,1.836,490,1.836,491,1.836,492,1.836,493,3.935,494,1.836,495,1.836,496,1.836,497,1.836,498,2.849,499,1.836,500,1.836,501,1.836,502,1.836,503,1.836,504,2.849,505,1.836,506,1.836,507,1.836,508,2.849,509,1.836,510,1.836,511,3.24,512,2.849,513,1.836,514,1.836,515,1.836,516,1.836,517,1.836,518,1.836,519,1.836,520,1.836,521,2.849,522,1.836,523,1.836,524,1.836,525,1.836,526,3.492,527,1.836,528,1.836,529,1.836,530,1.836,531,1.836,532,2.849,533,1.836,534,1.836,535,1.836,536,1.836,537,1.836,538,2.849,539,1.836,540,1.836,541,1.836,542,2.849,543,2.849,544,1.836,545,1.836,546,1.836,547,1.836,548,1.836,549,1.836,550,1.836,551,1.836,552,1.836,553,1.836,554,1.836,555,1.512,556,1.836,557,1.836,558,1.836,559,1.836,560,1.836,561,1.836,562,1.512]],["title/modules.html",[20,1.806]],["body/modules.html",[8,0.032,16,0.032,17,0.032,19,2.564,20,1.833,30,2.038,31,2.277,32,1.833,511,4.615,563,5.606,564,5.606,565,5.606]],["title/overview.html",[566,3.355]],["body/overview.html",[2,1.067,8,0.038,10,2.263,16,0.026,17,0.026,18,1.067,19,3.534,20,1.309,21,1.309,22,1.626,23,1.626,24,1.309,25,1.626,26,1.626,27,2.432,28,2.432,29,2.432,30,2.628,31,3.005,32,2.42,33,2.22,34,1.626,35,1.455,45,1.626,61,2.42,64,2.432,65,2.432,66,2.432,77,2.183,101,1.309,252,2.263,312,2.432,314,2.432,368,2.432,369,2.432,370,2.432,566,2.432,567,4.593,568,2.953]],["title/properties.html",[105,1.596,411,2.068]],["body/properties.html",[8,0.038,16,0.034,17,0.034,105,1.944,142,1.754,555,3.612,562,3.612,569,4.387,570,4.387,571,4.387]]],"invertedIndex":[["",{"_index":8,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"classes/CreateMetaOptionsDto.html":{},"classes/CreatePostDto.html":{},"classes/CreateUserDto.html":{},"classes/GetUsersParamDto.html":{},"classes/PatchPostDto.html":{},"classes/PatchUserDto.html":{},"injectables/PostServices.html":{},"controllers/PostsController.html":{},"modules/PostsModule.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{}}}],["0",{"_index":399,"title":{},"body":{"coverage.html":{}}}],["0.0.1",{"_index":570,"title":{},"body":{"properties.html":{}}}],["0.14.1",{"_index":421,"title":{},"body":{"dependencies.html":{}}}],["0.2.0",{"_index":424,"title":{},"body":{"dependencies.html":{}}}],["0.5.1",{"_index":420,"title":{},"body":{"dependencies.html":{}}}],["0/1",{"_index":400,"title":{},"body":{"coverage.html":{}}}],["0/11",{"_index":406,"title":{},"body":{"coverage.html":{}}}],["0/2",{"_index":401,"title":{},"body":{"coverage.html":{}}}],["0/3",{"_index":405,"title":{},"body":{"coverage.html":{}}}],["0/4",{"_index":402,"title":{},"body":{"coverage.html":{}}}],["0/5",{"_index":407,"title":{},"body":{"coverage.html":{}}}],["1",{"_index":336,"title":{},"body":{"controllers/UsersController.html":{}}}],["1.1.23",{"_index":413,"title":{},"body":{"dependencies.html":{}}}],["10",{"_index":356,"title":{},"body":{"controllers/UsersController.html":{}}}],["10.0.0",{"_index":414,"title":{},"body":{"dependencies.html":{}}}],["10})@apiquery({name",{"_index":335,"title":{},"body":{"controllers/UsersController.html":{}}}],["1234",{"_index":233,"title":{},"body":{"classes/GetUsersParamDto.html":{}}}],["1234})@isoptional()@isint()@type(undefined",{"_index":230,"title":{},"body":{"classes/GetUsersParamDto.html":{}}}],["2",{"_index":394,"title":{},"body":{"injectables/UsersService.html":{}}}],["2.0.5",{"_index":416,"title":{},"body":{"dependencies.html":{}}}],["200",{"_index":327,"title":{},"body":{"controllers/UsersController.html":{}}}],["201",{"_index":279,"title":{},"body":{"controllers/PostsController.html":{}}}],["232",{"_index":393,"title":{},"body":{"injectables/UsersService.html":{}}}],["233",{"_index":390,"title":{},"body":{"injectables/UsersService.html":{}}}],["3/4",{"_index":409,"title":{},"body":{"coverage.html":{}}}],["4",{"_index":567,"title":{},"body":{"overview.html":{}}}],["6",{"_index":568,"title":{},"body":{"overview.html":{}}}],["7.3.0",{"_index":419,"title":{},"body":{"dependencies.html":{}}}],["7.8.1",{"_index":426,"title":{},"body":{"dependencies.html":{}}}],["75",{"_index":408,"title":{},"body":{"coverage.html":{}}}],["8",{"_index":219,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["allowing",{"_index":499,"title":{},"body":{"index.html":{}}}],["amazing",{"_index":548,"title":{},"body":{"index.html":{}}}],["apioperation",{"_index":296,"title":{},"body":{"controllers/PostsController.html":{},"controllers/UsersController.html":{}}}],["apioperation({summary",{"_index":274,"title":{},"body":{"controllers/PostsController.html":{}}}],["apiproperty",{"_index":191,"title":{},"body":{"classes/CreatePostDto.html":{},"classes/PatchPostDto.html":{}}}],["apiproperty({description",{"_index":238,"title":{},"body":{"classes/PatchPostDto.html":{}}}],["apiproperty({enum",{"_index":141,"title":{},"body":{"classes/CreatePostDto.html":{}}}],["apipropertyoptional",{"_index":192,"title":{},"body":{"classes/CreatePostDto.html":{},"classes/GetUsersParamDto.html":{}}}],["apipropertyoptional()@isoptional()@isarray()@isstring({each",{"_index":169,"title":{},"body":{"classes/CreatePostDto.html":{}}}],["apipropertyoptional({description",{"_index":152,"title":{},"body":{"classes/CreatePostDto.html":{},"classes/GetUsersParamDto.html":{}}}],["apipropertyoptional({type",{"_index":133,"title":{},"body":{"classes/CreatePostDto.html":{}}}],["apiquery",{"_index":352,"title":{},"body":{"controllers/UsersController.html":{}}}],["apiquery({name",{"_index":334,"title":{},"body":{"controllers/UsersController.html":{}}}],["apiresponse",{"_index":297,"title":{},"body":{"controllers/PostsController.html":{},"controllers/UsersController.html":{}}}],["apitags",{"_index":298,"title":{},"body":{"controllers/PostsController.html":{},"controllers/UsersController.html":{}}}],["apitags('posts",{"_index":302,"title":{},"body":{"controllers/PostsController.html":{}}}],["apitags('users",{"_index":354,"title":{},"body":{"controllers/UsersController.html":{}}}],["app.controller",{"_index":38,"title":{},"body":{"modules/AppModule.html":{}}}],["app.service",{"_index":11,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{}}}],["appcontroller",{"_index":1,"title":{"controllers/AppController.html":{}},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"coverage.html":{}}}],["application",{"_index":333,"title":{},"body":{"controllers/UsersController.html":{},"index.html":{}}}],["applications",{"_index":445,"title":{},"body":{"index.html":{}}}],["appmodule",{"_index":19,"title":{"modules/AppModule.html":{}},"body":{"modules/AppModule.html":{},"modules.html":{},"overview.html":{}}}],["appservice",{"_index":10,"title":{"injectables/AppService.html":{}},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"coverage.html":{},"overview.html":{}}}],["array",{"_index":134,"title":{},"body":{"classes/CreatePostDto.html":{}}}],["asdfasdf",{"_index":263,"title":{},"body":{"injectables/PostServices.html":{}}}],["auth",{"_index":60,"title":{},"body":{"controllers/AuthController.html":{}}}],["auth.controller",{"_index":69,"title":{},"body":{"modules/AuthModule.html":{}}}],["auth/auth.module",{"_index":41,"title":{},"body":{"modules/AppModule.html":{}}}],["authcontroller",{"_index":57,"title":{"controllers/AuthController.html":{}},"body":{"controllers/AuthController.html":{},"modules/AuthModule.html":{},"coverage.html":{}}}],["authmodule",{"_index":30,"title":{"modules/AuthModule.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/UsersModule.html":{},"modules.html":{},"overview.html":{}}}],["author",{"_index":555,"title":{},"body":{"index.html":{},"properties.html":{}}}],["authservice",{"_index":61,"title":{"injectables/AuthService.html":{}},"body":{"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"injectables/UsersService.html":{},"coverage.html":{},"overview.html":{}}}],["aws",{"_index":488,"title":{},"body":{"index.html":{}}}],["backers",{"_index":549,"title":{},"body":{"index.html":{}}}],["based",{"_index":483,"title":{},"body":{"index.html":{}}}],["blog",{"_index":277,"title":{},"body":{"controllers/PostsController.html":{}}}],["board",{"_index":541,"title":{},"body":{"index.html":{}}}],["body",{"_index":293,"title":{},"body":{"controllers/PostsController.html":{},"controllers/UsersController.html":{}}}],["boolean",{"_index":85,"title":{},"body":{"injectables/AuthService.html":{}}}],["bootstrap",{"_index":24,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/PostsModule.html":{},"modules/UsersModule.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"overview.html":{}}}],["browse",{"_index":565,"title":{},"body":{"modules.html":{}}}],["browser",{"_index":563,"title":{},"body":{"modules.html":{}}}],["building",{"_index":440,"title":{},"body":{"index.html":{}}}],["channel",{"_index":514,"title":{},"body":{"index.html":{}}}],["check",{"_index":477,"title":{},"body":{"index.html":{}}}],["class",{"_index":13,"title":{"classes/CreateMetaOptionsDto.html":{},"classes/CreatePostDto.html":{},"classes/CreateUserDto.html":{},"classes/GetUsersParamDto.html":{},"classes/PatchPostDto.html":{},"classes/PatchUserDto.html":{}},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"classes/CreateMetaOptionsDto.html":{},"classes/CreatePostDto.html":{},"classes/CreateUserDto.html":{},"classes/GetUsersParamDto.html":{},"classes/PatchPostDto.html":{},"classes/PatchUserDto.html":{},"injectables/PostServices.html":{},"controllers/PostsController.html":{},"modules/PostsModule.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"coverage.html":{},"dependencies.html":{}}}],["classes",{"_index":101,"title":{},"body":{"classes/CreateMetaOptionsDto.html":{},"classes/CreatePostDto.html":{},"classes/CreateUserDto.html":{},"classes/GetUsersParamDto.html":{},"classes/PatchPostDto.html":{},"classes/PatchUserDto.html":{},"overview.html":{}}}],["clicks",{"_index":498,"title":{},"body":{"index.html":{}}}],["cloud",{"_index":482,"title":{},"body":{"index.html":{}}}],["cluster_appmodule",{"_index":27,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_imports",{"_index":29,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_providers",{"_index":28,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_authmodule",{"_index":64,"title":{},"body":{"modules/AuthModule.html":{},"overview.html":{}}}],["cluster_authmodule_exports",{"_index":65,"title":{},"body":{"modules/AuthModule.html":{},"overview.html":{}}}],["cluster_authmodule_providers",{"_index":66,"title":{},"body":{"modules/AuthModule.html":{},"overview.html":{}}}],["cluster_postsmodule",{"_index":312,"title":{},"body":{"modules/PostsModule.html":{},"overview.html":{}}}],["cluster_postsmodule_imports",{"_index":313,"title":{},"body":{"modules/PostsModule.html":{}}}],["cluster_postsmodule_providers",{"_index":314,"title":{},"body":{"modules/PostsModule.html":{},"overview.html":{}}}],["cluster_usersmodule",{"_index":368,"title":{},"body":{"modules/UsersModule.html":{},"overview.html":{}}}],["cluster_usersmodule_exports",{"_index":369,"title":{},"body":{"modules/UsersModule.html":{},"overview.html":{}}}],["cluster_usersmodule_providers",{"_index":370,"title":{},"body":{"modules/UsersModule.html":{},"overview.html":{}}}],["come",{"_index":505,"title":{},"body":{"index.html":{}}}],["compodoc/compodoc",{"_index":412,"title":{},"body":{"dependencies.html":{}}}],["connect",{"_index":375,"title":{},"body":{"injectables/UsersService.html":{}}}],["console.log(createpostdto",{"_index":309,"title":{},"body":{"controllers/PostsController.html":{}}}],["console.log(createuserdto",{"_index":364,"title":{},"body":{"controllers/UsersController.html":{}}}],["console.log(isauth",{"_index":387,"title":{},"body":{"injectables/UsersService.html":{}}}],["console.log(patchpostsdto",{"_index":311,"title":{},"body":{"controllers/PostsController.html":{}}}],["const",{"_index":95,"title":{},"body":{"injectables/AuthService.html":{},"injectables/PostServices.html":{},"injectables/UsersService.html":{}}}],["constructor",{"_index":75,"title":{},"body":{"injectables/AuthService.html":{},"injectables/PostServices.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["constructor(authservice",{"_index":378,"title":{},"body":{"injectables/UsersService.html":{}}}],["constructor(private",{"_index":14,"title":{},"body":{"controllers/AppController.html":{},"controllers/AuthController.html":{},"controllers/PostsController.html":{}}}],["constructor(userservice",{"_index":76,"title":{},"body":{"injectables/AuthService.html":{}}}],["constructor(usersservice",{"_index":255,"title":{},"body":{"injectables/PostServices.html":{}}}],["content",{"_index":117,"title":{},"body":{"classes/CreatePostDto.html":{},"injectables/PostServices.html":{}}}],["controller",{"_index":0,"title":{"controllers/AppController.html":{},"controllers/AuthController.html":{},"controllers/PostsController.html":{},"controllers/UsersController.html":{}},"body":{"controllers/AppController.html":{},"controllers/AuthController.html":{},"controllers/PostsController.html":{},"controllers/UsersController.html":{},"coverage.html":{}}}],["controller('auth",{"_index":63,"title":{},"body":{"controllers/AuthController.html":{}}}],["controller('posts",{"_index":301,"title":{},"body":{"controllers/PostsController.html":{}}}],["controller('users",{"_index":353,"title":{},"body":{"controllers/UsersController.html":{}}}],["controllers",{"_index":2,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"controllers/PostsController.html":{},"modules/PostsModule.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"overview.html":{}}}],["courses",{"_index":520,"title":{},"body":{"index.html":{}}}],["coverage",{"_index":395,"title":{"coverage.html":{}},"body":{"coverage.html":{},"index.html":{}}}],["create",{"_index":189,"title":{},"body":{"classes/CreatePostDto.html":{},"classes/PatchPostDto.html":{},"classes/PatchUserDto.html":{}}}],["created",{"_index":43,"title":{},"body":{"modules/AppModule.html":{},"controllers/PostsController.html":{}}}],["createmetaoptionsdto",{"_index":100,"title":{"classes/CreateMetaOptionsDto.html":{}},"body":{"classes/CreateMetaOptionsDto.html":{},"classes/CreatePostDto.html":{},"coverage.html":{}}}],["createpost",{"_index":270,"title":{},"body":{"controllers/PostsController.html":{}}}],["createpost(@body",{"_index":308,"title":{},"body":{"controllers/PostsController.html":{}}}],["createpost(createpostdto",{"_index":273,"title":{},"body":{"controllers/PostsController.html":{}}}],["createpostdto",{"_index":115,"title":{"classes/CreatePostDto.html":{}},"body":{"classes/CreatePostDto.html":{},"classes/PatchPostDto.html":{},"controllers/PostsController.html":{},"coverage.html":{}}}],["creates",{"_index":275,"title":{},"body":{"controllers/PostsController.html":{}}}],["createuser",{"_index":319,"title":{},"body":{"controllers/UsersController.html":{}}}],["createuser(@body",{"_index":363,"title":{},"body":{"controllers/UsersController.html":{}}}],["createuser(createuserdto",{"_index":322,"title":{},"body":{"controllers/UsersController.html":{}}}],["createuserdto",{"_index":203,"title":{"classes/CreateUserDto.html":{}},"body":{"classes/CreateUserDto.html":{},"classes/PatchUserDto.html":{},"controllers/UsersController.html":{},"coverage.html":{}}}],["date",{"_index":149,"title":{},"body":{"classes/CreatePostDto.html":{}}}],["declarations",{"_index":23,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/PostsModule.html":{},"modules/UsersModule.html":{},"overview.html":{}}}],["decorators",{"_index":108,"title":{},"body":{"classes/CreateMetaOptionsDto.html":{},"classes/CreatePostDto.html":{},"classes/CreateUserDto.html":{},"classes/GetUsersParamDto.html":{},"classes/PatchPostDto.html":{},"controllers/PostsController.html":{},"controllers/UsersController.html":{}}}],["deeper",{"_index":516,"title":{},"body":{"index.html":{}}}],["defaultvaluepipe",{"_index":347,"title":{},"body":{"controllers/UsersController.html":{}}}],["defaultvaluepipe(1",{"_index":360,"title":{},"body":{"controllers/UsersController.html":{}}}],["defaultvaluepipe(10",{"_index":358,"title":{},"body":{"controllers/UsersController.html":{}}}],["defined",{"_index":50,"title":{},"body":{"injectables/AppService.html":{},"injectables/AuthService.html":{},"classes/CreateMetaOptionsDto.html":{},"classes/CreatePostDto.html":{},"classes/CreateUserDto.html":{},"classes/GetUsersParamDto.html":{},"classes/PatchPostDto.html":{},"injectables/PostServices.html":{},"controllers/PostsController.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["delete",{"_index":342,"title":{},"body":{"controllers/UsersController.html":{}}}],["dependencies",{"_index":21,"title":{"dependencies.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/PostsModule.html":{},"modules/UsersModule.html":{},"dependencies.html":{},"overview.html":{}}}],["deploy",{"_index":470,"title":{},"body":{"index.html":{}}}],["deploying",{"_index":487,"title":{},"body":{"index.html":{}}}],["deployment",{"_index":478,"title":{},"body":{"index.html":{}}}],["deploywith",{"_index":497,"title":{},"body":{"index.html":{}}}],["description",{"_index":142,"title":{},"body":{"classes/CreatePostDto.html":{},"classes/GetUsersParamDto.html":{},"classes/PatchPostDto.html":{},"controllers/PostsController.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{},"index.html":{},"properties.html":{}}}],["development",{"_index":455,"title":{},"body":{"index.html":{}}}],["devtools",{"_index":528,"title":{},"body":{"index.html":{}}}],["discord",{"_index":513,"title":{},"body":{"index.html":{}}}],["dive",{"_index":515,"title":{},"body":{"index.html":{}}}],["documentation",{"_index":396,"title":{},"body":{"coverage.html":{},"index.html":{}}}],["draft",{"_index":164,"title":{},"body":{"classes/CreatePostDto.html":{},"miscellaneous/enumerations.html":{}}}],["dtos/create",{"_index":299,"title":{},"body":{"controllers/PostsController.html":{},"controllers/UsersController.html":{}}}],["dtos/get",{"_index":349,"title":{},"body":{"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["dtos/patch",{"_index":300,"title":{},"body":{"controllers/PostsController.html":{},"controllers/UsersController.html":{}}}],["e2e",{"_index":465,"title":{},"body":{"index.html":{}}}],["each",{"_index":171,"title":{},"body":{"classes/CreatePostDto.html":{}}}],["efficient",{"_index":441,"title":{},"body":{"index.html":{}}}],["efficiently",{"_index":476,"title":{},"body":{"index.html":{}}}],["email",{"_index":90,"title":{},"body":{"injectables/AuthService.html":{},"classes/CreateUserDto.html":{},"injectables/UsersService.html":{}}}],["ensure",{"_index":474,"title":{},"body":{"index.html":{}}}],["enterprise",{"_index":531,"title":{},"body":{"index.html":{}}}],["enum",{"_index":197,"title":{},"body":{"classes/CreatePostDto.html":{}}}],["enumerations",{"_index":428,"title":{"miscellaneous/enumerations.html":{}},"body":{"miscellaneous/enumerations.html":{}}}],["enums/posttype.enum",{"_index":187,"title":{},"body":{"classes/CreatePostDto.html":{}}}],["enums/status.enum",{"_index":188,"title":{},"body":{"classes/CreatePostDto.html":{}}}],["error",{"_index":157,"title":{},"body":{"classes/CreatePostDto.html":{}}}],["example",{"_index":196,"title":{},"body":{"classes/CreatePostDto.html":{},"classes/GetUsersParamDto.html":{},"controllers/UsersController.html":{},"index.html":{}}}],["experience",{"_index":518,"title":{},"body":{"index.html":{}}}],["export",{"_index":12,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"classes/CreateMetaOptionsDto.html":{},"classes/CreatePostDto.html":{},"classes/CreateUserDto.html":{},"classes/GetUsersParamDto.html":{},"classes/PatchPostDto.html":{},"classes/PatchUserDto.html":{},"injectables/PostServices.html":{},"controllers/PostsController.html":{},"modules/PostsModule.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{}}}],["exports",{"_index":26,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/PostsModule.html":{},"modules/UsersModule.html":{},"overview.html":{}}}],["express",{"_index":418,"title":{},"body":{"dependencies.html":{}}}],["extends",{"_index":236,"title":{},"body":{"classes/PatchPostDto.html":{},"classes/PatchUserDto.html":{}}}],["false",{"_index":136,"title":{},"body":{"classes/CreatePostDto.html":{},"controllers/UsersController.html":{}}}],["fast",{"_index":491,"title":{},"body":{"index.html":{}}}],["feature",{"_index":130,"title":{},"body":{"classes/CreatePostDto.html":{}}}],["featuredimageurl",{"_index":118,"title":{},"body":{"classes/CreatePostDto.html":{}}}],["features",{"_index":501,"title":{},"body":{"index.html":{}}}],["fetched",{"_index":328,"title":{},"body":{"controllers/UsersController.html":{}}}],["fetches",{"_index":330,"title":{},"body":{"controllers/UsersController.html":{}}}],["few",{"_index":493,"title":{},"body":{"index.html":{}}}],["file",{"_index":5,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"classes/CreateMetaOptionsDto.html":{},"classes/CreatePostDto.html":{},"classes/CreateUserDto.html":{},"classes/GetUsersParamDto.html":{},"classes/PatchPostDto.html":{},"classes/PatchUserDto.html":{},"injectables/PostServices.html":{},"controllers/PostsController.html":{},"modules/PostsModule.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"coverage.html":{}}}],["find",{"_index":382,"title":{},"body":{"injectables/UsersService.html":{}}}],["findall",{"_index":254,"title":{},"body":{"injectables/PostServices.html":{},"injectables/UsersService.html":{}}}],["findall(getusersparamdto",{"_index":380,"title":{},"body":{"injectables/UsersService.html":{}}}],["findall(userid",{"_index":257,"title":{},"body":{"injectables/PostServices.html":{}}}],["findonebyid",{"_index":377,"title":{},"body":{"injectables/UsersService.html":{}}}],["findonebyid(id",{"_index":383,"title":{},"body":{"injectables/UsersService.html":{}}}],["firstname",{"_index":206,"title":{},"body":{"classes/CreateUserDto.html":{},"injectables/UsersService.html":{}}}],["focus",{"_index":500,"title":{},"body":{"index.html":{}}}],["follow",{"_index":535,"title":{},"body":{"index.html":{}}}],["forwardref",{"_index":68,"title":{},"body":{"modules/AuthModule.html":{},"injectables/AuthService.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{}}}],["framework",{"_index":439,"title":{},"body":{"index.html":{}}}],["full",{"_index":530,"title":{},"body":{"index.html":{}}}],["function",{"_index":404,"title":{},"body":{"coverage.html":{}}}],["functions",{"_index":433,"title":{"miscellaneous/functions.html":{}},"body":{"miscellaneous/functions.html":{}}}],["g",{"_index":496,"title":{},"body":{"index.html":{}}}],["get('/:id",{"_index":355,"title":{},"body":{"controllers/UsersController.html":{}}}],["get('/:id?')@apiresponse({status",{"_index":326,"title":{},"body":{"controllers/UsersController.html":{}}}],["get('/:userid",{"_index":285,"title":{},"body":{"controllers/PostsController.html":{}}}],["gethello",{"_index":49,"title":{},"body":{"injectables/AppService.html":{}}}],["getposts",{"_index":271,"title":{},"body":{"controllers/PostsController.html":{}}}],["getposts(@param('userid",{"_index":304,"title":{},"body":{"controllers/PostsController.html":{}}}],["getposts(userid",{"_index":284,"title":{},"body":{"controllers/PostsController.html":{}}}],["getting",{"_index":435,"title":{"index.html":{}},"body":{}}],["getusers",{"_index":320,"title":{},"body":{"controllers/UsersController.html":{}}}],["getusers(getusersparamdto",{"_index":324,"title":{},"body":{"controllers/UsersController.html":{}}}],["getusersparamdto",{"_index":226,"title":{"classes/GetUsersParamDto.html":{}},"body":{"classes/GetUsersParamDto.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{},"coverage.html":{}}}],["graph",{"_index":523,"title":{},"body":{"index.html":{}}}],["grow",{"_index":545,"title":{},"body":{"index.html":{}}}],["habijabi",{"_index":264,"title":{},"body":{"injectables/PostServices.html":{}}}],["habijabi@email.com",{"_index":389,"title":{},"body":{"injectables/UsersService.html":{}}}],["hands",{"_index":517,"title":{},"body":{"index.html":{}}}],["handy",{"_index":506,"title":{},"body":{"index.html":{}}}],["headers",{"_index":344,"title":{},"body":{"controllers/UsersController.html":{}}}],["hello",{"_index":55,"title":{},"body":{"injectables/AppService.html":{}}}],["help",{"_index":521,"title":{},"body":{"index.html":{}}}],["here",{"_index":553,"title":{},"body":{"index.html":{}}}],["https://nestjs.com",{"_index":559,"title":{},"body":{"index.html":{}}}],["id",{"_index":88,"title":{},"body":{"injectables/AuthService.html":{},"classes/GetUsersParamDto.html":{},"classes/PatchPostDto.html":{},"injectables/UsersService.html":{}}}],["identifier",{"_index":397,"title":{},"body":{"coverage.html":{}}}],["image",{"_index":131,"title":{},"body":{"classes/CreatePostDto.html":{}}}],["import",{"_index":7,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"classes/CreateMetaOptionsDto.html":{},"classes/CreatePostDto.html":{},"classes/CreateUserDto.html":{},"classes/GetUsersParamDto.html":{},"classes/PatchPostDto.html":{},"classes/PatchUserDto.html":{},"injectables/PostServices.html":{},"controllers/PostsController.html":{},"modules/PostsModule.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{}}}],["imports",{"_index":37,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/PostsModule.html":{},"modules/UsersModule.html":{}}}],["index",{"_index":47,"title":{"index.html":{}},"body":{"injectables/AppService.html":{},"injectables/AuthService.html":{},"classes/CreateMetaOptionsDto.html":{},"classes/CreatePostDto.html":{},"classes/CreateUserDto.html":{},"classes/GetUsersParamDto.html":{},"classes/PatchPostDto.html":{},"injectables/PostServices.html":{},"controllers/PostsController.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{}}}],["info",{"_index":3,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"classes/CreateMetaOptionsDto.html":{},"classes/CreatePostDto.html":{},"classes/CreateUserDto.html":{},"classes/GetUsersParamDto.html":{},"classes/PatchPostDto.html":{},"classes/PatchUserDto.html":{},"injectables/PostServices.html":{},"controllers/PostsController.html":{},"modules/PostsModule.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{}}}],["information",{"_index":480,"title":{},"body":{"index.html":{}}}],["infrastructure",{"_index":503,"title":{},"body":{"index.html":{}}}],["inject",{"_index":91,"title":{},"body":{"injectables/AuthService.html":{},"injectables/UsersService.html":{}}}],["inject(forwardref",{"_index":93,"title":{},"body":{"injectables/AuthService.html":{},"injectables/UsersService.html":{}}}],["injectable",{"_index":44,"title":{"injectables/AppService.html":{},"injectables/AuthService.html":{},"injectables/PostServices.html":{},"injectables/UsersService.html":{}},"body":{"injectables/AppService.html":{},"injectables/AuthService.html":{},"injectables/PostServices.html":{},"injectables/UsersService.html":{},"coverage.html":{}}}],["injectables",{"_index":45,"title":{},"body":{"injectables/AppService.html":{},"injectables/AuthService.html":{},"injectables/PostServices.html":{},"injectables/UsersService.html":{},"overview.html":{}}}],["injecting",{"_index":260,"title":{},"body":{"injectables/PostServices.html":{},"controllers/UsersController.html":{}}}],["install",{"_index":495,"title":{},"body":{"index.html":{}}}],["installcompile",{"_index":453,"title":{},"body":{"index.html":{}}}],["interact",{"_index":524,"title":{},"body":{"index.html":{}}}],["ip",{"_index":345,"title":{},"body":{"controllers/UsersController.html":{}}}],["isarray",{"_index":175,"title":{},"body":{"classes/CreatePostDto.html":{}}}],["isauth",{"_index":73,"title":{},"body":{"injectables/AuthService.html":{},"injectables/UsersService.html":{}}}],["isdate",{"_index":176,"title":{},"body":{"classes/CreatePostDto.html":{}}}],["isemail",{"_index":223,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["isenum",{"_index":177,"title":{},"body":{"classes/CreatePostDto.html":{}}}],["isenum(posttype",{"_index":199,"title":{},"body":{"classes/CreatePostDto.html":{}}}],["isenum(status",{"_index":201,"title":{},"body":{"classes/CreatePostDto.html":{}}}],["isenum(status)@isnotempty()@apiproperty({enum",{"_index":163,"title":{},"body":{"classes/CreatePostDto.html":{}}}],["isin",{"_index":243,"title":{},"body":{"classes/PatchPostDto.html":{}}}],["isint",{"_index":232,"title":{},"body":{"classes/GetUsersParamDto.html":{},"classes/PatchPostDto.html":{}}}],["isiso8601",{"_index":178,"title":{},"body":{"classes/CreatePostDto.html":{}}}],["isiso8601()@isoptional",{"_index":150,"title":{},"body":{"classes/CreatePostDto.html":{}}}],["isjson",{"_index":179,"title":{},"body":{"classes/CreatePostDto.html":{}}}],["isnotempty",{"_index":111,"title":{},"body":{"classes/CreateMetaOptionsDto.html":{},"classes/CreatePostDto.html":{},"classes/CreateUserDto.html":{}}}],["isnotempty()@isemail",{"_index":208,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["isnotempty()@isstring()@isoptional()@apipropertyoptional({description",{"_index":127,"title":{},"body":{"classes/CreatePostDto.html":{}}}],["isoptional",{"_index":180,"title":{},"body":{"classes/CreatePostDto.html":{},"classes/CreateUserDto.html":{},"classes/GetUsersParamDto.html":{}}}],["isstring",{"_index":113,"title":{},"body":{"classes/CreateMetaOptionsDto.html":{},"classes/CreatePostDto.html":{},"classes/CreateUserDto.html":{}}}],["isstring()@isnotempty",{"_index":109,"title":{},"body":{"classes/CreateMetaOptionsDto.html":{}}}],["isstring()@isnotempty()@minlength(3)@maxlength(90",{"_index":210,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["isstring()@isnotempty()@minlength(3)@maxlength(90)@apiproperty({example",{"_index":173,"title":{},"body":{"classes/CreatePostDto.html":{}}}],["isstring()@isnotempty()@minlength(6)@apiproperty({example",{"_index":160,"title":{},"body":{"classes/CreatePostDto.html":{}}}],["isstring()@isnotempty()@minlength(8)@matches(/^(?=.*\\d)(?=.*[!@#$%^&*])(?=.*[a",{"_index":214,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["isstring()@isoptional()@isurl()@apipropertyoptional({description",{"_index":129,"title":{},"body":{"classes/CreatePostDto.html":{}}}],["isstring()@isoptional()@minlength(3)@maxlength(90",{"_index":212,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["isurl",{"_index":181,"title":{},"body":{"classes/CreatePostDto.html":{}}}],["items",{"_index":137,"title":{},"body":{"classes/CreatePostDto.html":{}}}],["jhon",{"_index":388,"title":{},"body":{"injectables/UsersService.html":{}}}],["job",{"_index":538,"title":{},"body":{"index.html":{}}}],["jobs",{"_index":540,"title":{},"body":{"index.html":{}}}],["join",{"_index":551,"title":{},"body":{"index.html":{}}}],["json",{"_index":154,"title":{},"body":{"classes/CreatePostDto.html":{}}}],["kamil",{"_index":556,"title":{},"body":{"index.html":{}}}],["key",{"_index":106,"title":{},"body":{"classes/CreateMetaOptionsDto.html":{},"classes/CreatePostDto.html":{},"index.html":{}}}],["lastname",{"_index":207,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["learn",{"_index":509,"title":{},"body":{"index.html":{}}}],["legend",{"_index":22,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/PostsModule.html":{},"modules/UsersModule.html":{},"overview.html":{}}}],["letters",{"_index":220,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["license",{"_index":562,"title":{},"body":{"index.html":{},"properties.html":{}}}],["licensed",{"_index":543,"title":{},"body":{"index.html":{}}}],["limit",{"_index":325,"title":{},"body":{"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["linkedin",{"_index":537,"title":{},"body":{"index.html":{}}}],["list",{"_index":331,"title":{},"body":{"controllers/UsersController.html":{}}}],["login",{"_index":74,"title":{},"body":{"injectables/AuthService.html":{}}}],["login(email",{"_index":86,"title":{},"body":{"injectables/AuthService.html":{}}}],["looking",{"_index":481,"title":{},"body":{"index.html":{}}}],["loop",{"_index":533,"title":{},"body":{"index.html":{}}}],["makes",{"_index":489,"title":{},"body":{"index.html":{}}}],["managing",{"_index":502,"title":{},"body":{"index.html":{}}}],["matches",{"_index":182,"title":{},"body":{"classes/CreatePostDto.html":{},"classes/CreateUserDto.html":{}}}],["matches(/^(?=.*\\d)(?=.*[!@#$%^&*])(?=.*[a",{"_index":225,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["matching",{"_index":17,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"classes/CreateMetaOptionsDto.html":{},"classes/CreatePostDto.html":{},"classes/CreateUserDto.html":{},"classes/GetUsersParamDto.html":{},"classes/PatchPostDto.html":{},"classes/PatchUserDto.html":{},"injectables/PostServices.html":{},"controllers/PostsController.html":{},"modules/PostsModule.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{}}}],["mau",{"_index":485,"title":{},"body":{"index.html":{}}}],["maxlength",{"_index":183,"title":{},"body":{"classes/CreatePostDto.html":{},"classes/CreateUserDto.html":{}}}],["maxlength(90",{"_index":195,"title":{},"body":{"classes/CreatePostDto.html":{},"classes/CreateUserDto.html":{}}}],["message",{"_index":217,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["metadata",{"_index":423,"title":{},"body":{"dependencies.html":{}}}],["metaoptions",{"_index":119,"title":{},"body":{"classes/CreatePostDto.html":{}}}],["metaoptions.dto",{"_index":190,"title":{},"body":{"classes/CreatePostDto.html":{}}}],["metaoptions.dto.ts",{"_index":104,"title":{},"body":{"classes/CreateMetaOptionsDto.html":{},"coverage.html":{}}}],["metaoptions.dto.ts:6",{"_index":110,"title":{},"body":{"classes/CreateMetaOptionsDto.html":{}}}],["metaoptions.dto.ts:9",{"_index":112,"title":{},"body":{"classes/CreateMetaOptionsDto.html":{}}}],["methods",{"_index":48,"title":{},"body":{"injectables/AppService.html":{},"injectables/AuthService.html":{},"injectables/PostServices.html":{},"controllers/PostsController.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["minlength",{"_index":184,"title":{},"body":{"classes/CreatePostDto.html":{},"classes/CreateUserDto.html":{}}}],["minlength(3",{"_index":194,"title":{},"body":{"classes/CreatePostDto.html":{},"classes/CreateUserDto.html":{}}}],["minlength(6",{"_index":200,"title":{},"body":{"classes/CreatePostDto.html":{}}}],["minlength(8",{"_index":224,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["minumum",{"_index":218,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["miscellaneous",{"_index":427,"title":{"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{}},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{}}}],["mit",{"_index":542,"title":{},"body":{"index.html":{}}}],["mode",{"_index":458,"title":{},"body":{"index.html":{}}}],["module",{"_index":18,"title":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/PostsModule.html":{},"modules/UsersModule.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/PostsModule.html":{},"modules/UsersModule.html":{},"overview.html":{}}}],["modules",{"_index":20,"title":{"modules.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/PostsModule.html":{},"modules/UsersModule.html":{},"modules.html":{},"overview.html":{}}}],["more",{"_index":479,"title":{},"body":{"index.html":{}}}],["mota",{"_index":391,"title":{},"body":{"injectables/UsersService.html":{}}}],["motu@email.com",{"_index":392,"title":{},"body":{"injectables/UsersService.html":{}}}],["myśliwiec",{"_index":557,"title":{},"body":{"index.html":{}}}],["name",{"_index":80,"title":{},"body":{"injectables/AuthService.html":{},"injectables/PostServices.html":{},"controllers/PostsController.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["need",{"_index":239,"title":{},"body":{"classes/PatchPostDto.html":{},"index.html":{}}}],["nest",{"_index":446,"title":{},"body":{"index.html":{}}}],["nestframework",{"_index":561,"title":{},"body":{"index.html":{}}}],["nestjs",{"_index":471,"title":{},"body":{"index.html":{}}}],["nestjs/common",{"_index":9,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"injectables/PostServices.html":{},"controllers/PostsController.html":{},"modules/PostsModule.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"dependencies.html":{}}}],["nestjs/core",{"_index":415,"title":{},"body":{"dependencies.html":{}}}],["nestjs/mapped",{"_index":249,"title":{},"body":{"classes/PatchUserDto.html":{},"dependencies.html":{}}}],["nestjs/platform",{"_index":417,"title":{},"body":{"dependencies.html":{}}}],["nestjs/swagger",{"_index":193,"title":{},"body":{"classes/CreatePostDto.html":{},"classes/GetUsersParamDto.html":{},"classes/PatchPostDto.html":{},"controllers/PostsController.html":{},"controllers/UsersController.html":{},"dependencies.html":{}}}],["new",{"_index":276,"title":{},"body":{"controllers/PostsController.html":{},"controllers/UsersController.html":{},"coverage.html":{}}}],["node.js",{"_index":438,"title":{},"body":{"index.html":{}}}],["npm",{"_index":452,"title":{},"body":{"index.html":{}}}],["number",{"_index":221,"title":{},"body":{"classes/CreateUserDto.html":{},"classes/GetUsersParamDto.html":{},"classes/PatchPostDto.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["object",{"_index":155,"title":{},"body":{"classes/CreatePostDto.html":{}}}],["offer",{"_index":539,"title":{},"body":{"index.html":{}}}],["official",{"_index":486,"title":{},"body":{"index.html":{}}}],["open",{"_index":544,"title":{},"body":{"index.html":{}}}],["optional",{"_index":82,"title":{},"body":{"injectables/AuthService.html":{},"classes/CreatePostDto.html":{},"classes/GetUsersParamDto.html":{},"injectables/PostServices.html":{},"controllers/PostsController.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["out",{"_index":35,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/PostsModule.html":{},"modules/UsersModule.html":{},"index.html":{},"overview.html":{}}}],["overview",{"_index":566,"title":{"overview.html":{}},"body":{"overview.html":{}}}],["package",{"_index":411,"title":{"dependencies.html":{},"properties.html":{}},"body":{}}],["page",{"_index":145,"title":{},"body":{"classes/CreatePostDto.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{},"miscellaneous/enumerations.html":{}}}],["param",{"_index":292,"title":{},"body":{"controllers/PostsController.html":{},"controllers/UsersController.html":{}}}],["param.dto",{"_index":350,"title":{},"body":{"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["param.dto.ts",{"_index":228,"title":{},"body":{"classes/GetUsersParamDto.html":{},"coverage.html":{}}}],["param.dto.ts:13",{"_index":231,"title":{},"body":{"classes/GetUsersParamDto.html":{}}}],["parameters",{"_index":79,"title":{},"body":{"injectables/AuthService.html":{},"injectables/PostServices.html":{},"controllers/PostsController.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["parseintpipe",{"_index":346,"title":{},"body":{"controllers/UsersController.html":{}}}],["part",{"_index":529,"title":{},"body":{"index.html":{}}}],["partialtype",{"_index":242,"title":{},"body":{"classes/PatchPostDto.html":{},"classes/PatchUserDto.html":{}}}],["partialtype(createpostdto",{"_index":237,"title":{},"body":{"classes/PatchPostDto.html":{}}}],["partialtype(createuserdto",{"_index":248,"title":{},"body":{"classes/PatchUserDto.html":{}}}],["password",{"_index":87,"title":{},"body":{"injectables/AuthService.html":{},"classes/CreateUserDto.html":{}}}],["patch",{"_index":294,"title":{},"body":{"controllers/PostsController.html":{},"controllers/UsersController.html":{}}}],["patchpostdto",{"_index":234,"title":{"classes/PatchPostDto.html":{}},"body":{"classes/PatchPostDto.html":{},"controllers/PostsController.html":{},"coverage.html":{}}}],["patchpostsdto",{"_index":291,"title":{},"body":{"controllers/PostsController.html":{}}}],["patchuser",{"_index":321,"title":{},"body":{"controllers/UsersController.html":{}}}],["patchuser(@body",{"_index":367,"title":{},"body":{"controllers/UsersController.html":{}}}],["patchuser(pathcuserdto",{"_index":338,"title":{},"body":{"controllers/UsersController.html":{}}}],["patchuserdto",{"_index":246,"title":{"classes/PatchUserDto.html":{}},"body":{"classes/PatchUserDto.html":{},"controllers/UsersController.html":{},"coverage.html":{}}}],["pathcuserdto",{"_index":340,"title":{},"body":{"controllers/UsersController.html":{}}}],["platform",{"_index":484,"title":{},"body":{"index.html":{}}}],["please",{"_index":512,"title":{},"body":{"index.html":{}}}],["possible",{"_index":143,"title":{},"body":{"classes/CreatePostDto.html":{},"index.html":{}}}],["post",{"_index":103,"title":{},"body":{"classes/CreateMetaOptionsDto.html":{},"classes/CreatePostDto.html":{},"classes/PatchPostDto.html":{},"controllers/PostsController.html":{},"controllers/UsersController.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{}}}],["post'})@apiresponse({status",{"_index":278,"title":{},"body":{"controllers/PostsController.html":{}}}],["post.dto",{"_index":244,"title":{},"body":{"classes/PatchPostDto.html":{},"controllers/PostsController.html":{}}}],["post.dto.ts",{"_index":116,"title":{},"body":{"classes/CreatePostDto.html":{},"classes/PatchPostDto.html":{},"coverage.html":{}}}],["post.dto.ts:10",{"_index":241,"title":{},"body":{"classes/PatchPostDto.html":{}}}],["post.dto.ts:112",{"_index":140,"title":{},"body":{"classes/CreatePostDto.html":{}}}],["post.dto.ts:31",{"_index":174,"title":{},"body":{"classes/CreatePostDto.html":{}}}],["post.dto.ts:39",{"_index":148,"title":{},"body":{"classes/CreatePostDto.html":{}}}],["post.dto.ts:47",{"_index":162,"title":{},"body":{"classes/CreatePostDto.html":{}}}],["post.dto.ts:56",{"_index":168,"title":{},"body":{"classes/CreatePostDto.html":{}}}],["post.dto.ts:64",{"_index":128,"title":{},"body":{"classes/CreatePostDto.html":{}}}],["post.dto.ts:72",{"_index":159,"title":{},"body":{"classes/CreatePostDto.html":{}}}],["post.dto.ts:80",{"_index":132,"title":{},"body":{"classes/CreatePostDto.html":{}}}],["post.dto.ts:84",{"_index":151,"title":{},"body":{"classes/CreatePostDto.html":{}}}],["post.dto.ts:91",{"_index":172,"title":{},"body":{"classes/CreatePostDto.html":{}}}],["posts",{"_index":269,"title":{},"body":{"controllers/PostsController.html":{}}}],["posts.controller",{"_index":316,"title":{},"body":{"modules/PostsModule.html":{}}}],["posts/posts.module",{"_index":40,"title":{},"body":{"modules/AppModule.html":{}}}],["postscontroller",{"_index":267,"title":{"controllers/PostsController.html":{}},"body":{"controllers/PostsController.html":{},"modules/PostsModule.html":{},"coverage.html":{}}}],["postservices",{"_index":252,"title":{"injectables/PostServices.html":{}},"body":{"injectables/PostServices.html":{},"controllers/PostsController.html":{},"modules/PostsModule.html":{},"coverage.html":{},"overview.html":{}}}],["postsmodule",{"_index":31,"title":{"modules/PostsModule.html":{}},"body":{"modules/AppModule.html":{},"modules/PostsModule.html":{},"modules.html":{},"overview.html":{}}}],["postsservices",{"_index":303,"title":{},"body":{"controllers/PostsController.html":{}}}],["posttype",{"_index":120,"title":{},"body":{"classes/CreatePostDto.html":{},"miscellaneous/enumerations.html":{}}}],["prefix",{"_index":59,"title":{},"body":{"controllers/AuthController.html":{},"controllers/PostsController.html":{},"controllers/UsersController.html":{}}}],["private",{"_index":94,"title":{},"body":{"injectables/AuthService.html":{},"injectables/PostServices.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["production",{"_index":460,"title":{},"body":{"index.html":{}}}],["progressive",{"_index":437,"title":{},"body":{"index.html":{}}}],["project",{"_index":450,"title":{},"body":{"index.html":{}}}],["properties",{"_index":105,"title":{"properties.html":{}},"body":{"classes/CreateMetaOptionsDto.html":{},"classes/CreatePostDto.html":{},"classes/CreateUserDto.html":{},"classes/GetUsersParamDto.html":{},"classes/PatchPostDto.html":{},"properties.html":{}}}],["providers",{"_index":25,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/PostsModule.html":{},"modules/UsersModule.html":{},"overview.html":{}}}],["providers/auth.service",{"_index":62,"title":{},"body":{"controllers/AuthController.html":{},"modules/AuthModule.html":{}}}],["providers/posts.service",{"_index":295,"title":{},"body":{"controllers/PostsController.html":{},"modules/PostsModule.html":{}}}],["providers/users.service",{"_index":351,"title":{},"body":{"controllers/UsersController.html":{},"modules/UsersModule.html":{}}}],["public",{"_index":72,"title":{},"body":{"injectables/AuthService.html":{},"injectables/PostServices.html":{},"controllers/PostsController.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["published",{"_index":167,"title":{},"body":{"classes/CreatePostDto.html":{},"miscellaneous/enumerations.html":{}}}],["publishon",{"_index":121,"title":{},"body":{"classes/CreatePostDto.html":{}}}],["put",{"_index":341,"title":{},"body":{"controllers/UsersController.html":{}}}],["query",{"_index":343,"title":{},"body":{"controllers/UsersController.html":{}}}],["query('limit",{"_index":357,"title":{},"body":{"controllers/UsersController.html":{}}}],["query('page",{"_index":359,"title":{},"body":{"controllers/UsersController.html":{}}}],["questions",{"_index":510,"title":{},"body":{"index.html":{}}}],["read",{"_index":552,"title":{},"body":{"index.html":{}}}],["readonly",{"_index":15,"title":{},"body":{"controllers/AppController.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"injectables/PostServices.html":{},"controllers/PostsController.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["ready",{"_index":469,"title":{},"body":{"index.html":{}}}],["real",{"_index":525,"title":{},"body":{"index.html":{}}}],["reflect",{"_index":422,"title":{},"body":{"dependencies.html":{}}}],["regustered",{"_index":332,"title":{},"body":{"controllers/UsersController.html":{}}}],["repository",{"_index":449,"title":{},"body":{"index.html":{}}}],["request",{"_index":366,"title":{},"body":{"controllers/UsersController.html":{}}}],["required",{"_index":135,"title":{},"body":{"classes/CreatePostDto.html":{},"controllers/UsersController.html":{}}}],["requiring",{"_index":492,"title":{},"body":{"index.html":{}}}],["reset",{"_index":34,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/PostsModule.html":{},"modules/UsersModule.html":{},"overview.html":{}}}],["resources",{"_index":504,"title":{},"body":{"index.html":{}}}],["response",{"_index":280,"title":{},"body":{"controllers/PostsController.html":{}}}],["results",{"_index":16,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"classes/CreateMetaOptionsDto.html":{},"classes/CreatePostDto.html":{},"classes/CreateUserDto.html":{},"classes/GetUsersParamDto.html":{},"classes/PatchPostDto.html":{},"classes/PatchUserDto.html":{},"injectables/PostServices.html":{},"controllers/PostsController.html":{},"modules/PostsModule.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{}}}],["return",{"_index":54,"title":{},"body":{"injectables/AppService.html":{},"injectables/AuthService.html":{},"injectables/PostServices.html":{},"controllers/PostsController.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["returns",{"_index":52,"title":{},"body":{"injectables/AppService.html":{},"injectables/AuthService.html":{},"injectables/PostServices.html":{},"controllers/PostsController.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["review",{"_index":166,"title":{},"body":{"classes/CreatePostDto.html":{},"miscellaneous/enumerations.html":{}}}],["run",{"_index":454,"title":{},"body":{"index.html":{}}}],["runs",{"_index":475,"title":{},"body":{"index.html":{}}}],["rxjs",{"_index":425,"title":{},"body":{"dependencies.html":{}}}],["sample_token",{"_index":98,"title":{},"body":{"injectables/AuthService.html":{}}}],["scalable",{"_index":442,"title":{},"body":{"index.html":{}}}],["scheduled",{"_index":165,"title":{},"body":{"classes/CreatePostDto.html":{},"miscellaneous/enumerations.html":{}}}],["schema",{"_index":122,"title":{},"body":{"classes/CreatePostDto.html":{}}}],["sent",{"_index":365,"title":{},"body":{"controllers/UsersController.html":{}}}],["serialize",{"_index":153,"title":{},"body":{"classes/CreatePostDto.html":{}}}],["series",{"_index":198,"title":{},"body":{"classes/CreatePostDto.html":{},"miscellaneous/enumerations.html":{}}}],["series''})@isnotempty()@isenum(posttype",{"_index":147,"title":{},"body":{"classes/CreatePostDto.html":{}}}],["server",{"_index":443,"title":{},"body":{"index.html":{}}}],["service",{"_index":261,"title":{},"body":{"injectables/PostServices.html":{}}}],["setup",{"_index":451,"title":{},"body":{"index.html":{}}}],["side",{"_index":444,"title":{},"body":{"index.html":{}}}],["simple",{"_index":494,"title":{},"body":{"index.html":{}}}],["slug",{"_index":123,"title":{},"body":{"classes/CreatePostDto.html":{}}}],["source",{"_index":4,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"classes/CreateMetaOptionsDto.html":{},"classes/CreatePostDto.html":{},"classes/CreateUserDto.html":{},"classes/GetUsersParamDto.html":{},"classes/PatchPostDto.html":{},"classes/PatchUserDto.html":{},"injectables/PostServices.html":{},"controllers/PostsController.html":{},"modules/PostsModule.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"index.html":{}}}],["specific",{"_index":229,"title":{},"body":{"classes/GetUsersParamDto.html":{}}}],["sponsors",{"_index":547,"title":{},"body":{"index.html":{}}}],["src/.../main.ts",{"_index":434,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/.../posttype.enum.ts",{"_index":429,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/.../status.enum.ts",{"_index":430,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/app.controller.ts",{"_index":6,"title":{},"body":{"controllers/AppController.html":{},"coverage.html":{}}}],["src/app.module.ts",{"_index":36,"title":{},"body":{"modules/AppModule.html":{}}}],["src/app.service.ts",{"_index":46,"title":{},"body":{"injectables/AppService.html":{},"coverage.html":{}}}],["src/app.service.ts:5",{"_index":51,"title":{},"body":{"injectables/AppService.html":{}}}],["src/auth/auth.controller.ts",{"_index":58,"title":{},"body":{"controllers/AuthController.html":{},"coverage.html":{}}}],["src/auth/auth.module",{"_index":373,"title":{},"body":{"modules/UsersModule.html":{}}}],["src/auth/auth.module.ts",{"_index":67,"title":{},"body":{"modules/AuthModule.html":{}}}],["src/auth/providers/auth.service",{"_index":385,"title":{},"body":{"injectables/UsersService.html":{}}}],["src/auth/providers/auth.service.ts",{"_index":71,"title":{},"body":{"injectables/AuthService.html":{},"coverage.html":{}}}],["src/auth/providers/auth.service.ts:11",{"_index":89,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/auth/providers/auth.service.ts:16",{"_index":84,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/auth/providers/auth.service.ts:5",{"_index":78,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/main.ts",{"_index":403,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["src/posts/dtos/create",{"_index":102,"title":{},"body":{"classes/CreateMetaOptionsDto.html":{},"classes/CreatePostDto.html":{},"coverage.html":{}}}],["src/posts/dtos/patch",{"_index":235,"title":{},"body":{"classes/PatchPostDto.html":{},"coverage.html":{}}}],["src/posts/enums/posttype.enum.ts",{"_index":431,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/posts/enums/status.enum.ts",{"_index":432,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/posts/posts.controller.ts",{"_index":268,"title":{},"body":{"controllers/PostsController.html":{},"coverage.html":{}}}],["src/posts/posts.controller.ts:13",{"_index":286,"title":{},"body":{"controllers/PostsController.html":{}}}],["src/posts/posts.controller.ts:25",{"_index":282,"title":{},"body":{"controllers/PostsController.html":{}}}],["src/posts/posts.controller.ts:37",{"_index":290,"title":{},"body":{"controllers/PostsController.html":{}}}],["src/posts/posts.module.ts",{"_index":315,"title":{},"body":{"modules/PostsModule.html":{}}}],["src/posts/providers/posts.service.ts",{"_index":253,"title":{},"body":{"injectables/PostServices.html":{},"coverage.html":{}}}],["src/posts/providers/posts.service.ts:10",{"_index":258,"title":{},"body":{"injectables/PostServices.html":{}}}],["src/posts/providers/posts.service.ts:5",{"_index":256,"title":{},"body":{"injectables/PostServices.html":{}}}],["src/users/dtos/create",{"_index":204,"title":{},"body":{"classes/CreateUserDto.html":{},"coverage.html":{}}}],["src/users/dtos/get",{"_index":227,"title":{},"body":{"classes/GetUsersParamDto.html":{},"coverage.html":{}}}],["src/users/dtos/patch",{"_index":247,"title":{},"body":{"classes/PatchUserDto.html":{},"coverage.html":{}}}],["src/users/providers/users.service",{"_index":92,"title":{},"body":{"injectables/AuthService.html":{},"injectables/PostServices.html":{}}}],["src/users/providers/users.service.ts",{"_index":374,"title":{},"body":{"injectables/UsersService.html":{},"coverage.html":{}}}],["src/users/providers/users.service.ts:10",{"_index":379,"title":{},"body":{"injectables/UsersService.html":{}}}],["src/users/providers/users.service.ts:20",{"_index":381,"title":{},"body":{"injectables/UsersService.html":{}}}],["src/users/providers/users.service.ts:45",{"_index":384,"title":{},"body":{"injectables/UsersService.html":{}}}],["src/users/users.controller.ts",{"_index":318,"title":{},"body":{"controllers/UsersController.html":{},"coverage.html":{}}}],["src/users/users.controller.ts:52",{"_index":337,"title":{},"body":{"controllers/UsersController.html":{}}}],["src/users/users.controller.ts:62",{"_index":323,"title":{},"body":{"controllers/UsersController.html":{}}}],["src/users/users.controller.ts:69",{"_index":339,"title":{},"body":{"controllers/UsersController.html":{}}}],["src/users/users.module",{"_index":70,"title":{},"body":{"modules/AuthModule.html":{},"modules/PostsModule.html":{}}}],["src/users/users.module.ts",{"_index":371,"title":{},"body":{"modules/UsersModule.html":{}}}],["start",{"_index":456,"title":{},"body":{"index.html":{}}}],["start:dev",{"_index":459,"title":{},"body":{"index.html":{}}}],["start:prodrun",{"_index":461,"title":{},"body":{"index.html":{}}}],["started",{"_index":436,"title":{"index.html":{}},"body":{}}],["starter",{"_index":448,"title":{},"body":{"index.html":{}}}],["statements",{"_index":398,"title":{},"body":{"coverage.html":{}}}],["status",{"_index":124,"title":{},"body":{"classes/CreatePostDto.html":{},"controllers/PostsController.html":{},"controllers/UsersController.html":{},"miscellaneous/enumerations.html":{}}}],["stay",{"_index":532,"title":{},"body":{"index.html":{}}}],["steps",{"_index":472,"title":{},"body":{"index.html":{}}}],["story",{"_index":146,"title":{},"body":{"classes/CreatePostDto.html":{},"miscellaneous/enumerations.html":{}}}],["straightforward",{"_index":490,"title":{},"body":{"index.html":{}}}],["string",{"_index":53,"title":{},"body":{"injectables/AppService.html":{},"injectables/AuthService.html":{},"classes/CreateMetaOptionsDto.html":{},"classes/CreatePostDto.html":{},"classes/CreateUserDto.html":{},"injectables/PostServices.html":{},"controllers/PostsController.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["successfully",{"_index":307,"title":{},"body":{"controllers/PostsController.html":{},"controllers/UsersController.html":{}}}],["successfully'})@apioperation({summary",{"_index":329,"title":{},"body":{"controllers/UsersController.html":{}}}],["successfully'})@patch",{"_index":289,"title":{},"body":{"controllers/PostsController.html":{}}}],["successfully'})@post",{"_index":281,"title":{},"body":{"controllers/PostsController.html":{}}}],["summary",{"_index":306,"title":{},"body":{"controllers/PostsController.html":{},"controllers/UsersController.html":{}}}],["support",{"_index":511,"title":{},"body":{"index.html":{},"modules.html":{}}}],["svg",{"_index":564,"title":{},"body":{"modules.html":{}}}],["table",{"_index":376,"title":{},"body":{"injectables/UsersService.html":{},"coverage.html":{}}}],["tablesort(document.getelementbyid('coverage",{"_index":410,"title":{},"body":{"coverage.html":{}}}],["tags",{"_index":125,"title":{},"body":{"classes/CreatePostDto.html":{}}}],["take",{"_index":473,"title":{},"body":{"index.html":{}}}],["test",{"_index":464,"title":{},"body":{"index.html":{}}}],["test:covdeployment",{"_index":467,"title":{},"body":{"index.html":{}}}],["test:e2e",{"_index":466,"title":{},"body":{"index.html":{}}}],["tests",{"_index":462,"title":{},"body":{"index.html":{}}}],["thanks",{"_index":546,"title":{},"body":{"index.html":{}}}],["this.authservice.isauth",{"_index":386,"title":{},"body":{"injectables/UsersService.html":{}}}],["this.postsservices.findall(userid",{"_index":305,"title":{},"body":{"controllers/PostsController.html":{}}}],["this.userservice.findall(getusersparamdto",{"_index":361,"title":{},"body":{"controllers/UsersController.html":{}}}],["this.userservice.findonebyid('1234",{"_index":97,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.userservice.findonebyid(2",{"_index":362,"title":{},"body":{"controllers/UsersController.html":{}}}],["this.usersservice.findonebyid(userid",{"_index":262,"title":{},"body":{"injectables/PostServices.html":{}}}],["thrown",{"_index":202,"title":{},"body":{"classes/CreatePostDto.html":{}}}],["thrown'})@isoptional()@isjson",{"_index":158,"title":{},"body":{"classes/CreatePostDto.html":{}}}],["time",{"_index":526,"title":{},"body":{"index.html":{}}}],["title",{"_index":126,"title":{},"body":{"classes/CreatePostDto.html":{},"injectables/PostServices.html":{}}}],["touch",{"_index":554,"title":{},"body":{"index.html":{}}}],["transformer",{"_index":186,"title":{},"body":{"classes/CreatePostDto.html":{},"classes/GetUsersParamDto.html":{},"dependencies.html":{}}}],["true",{"_index":99,"title":{},"body":{"injectables/AuthService.html":{},"classes/CreatePostDto.html":{}}}],["true})@minlength(3",{"_index":170,"title":{},"body":{"classes/CreatePostDto.html":{}}}],["true})@type(undefined",{"_index":139,"title":{},"body":{"classes/CreatePostDto.html":{}}}],["twitter",{"_index":560,"title":{},"body":{"index.html":{}}}],["type",{"_index":81,"title":{},"body":{"injectables/AuthService.html":{},"classes/CreateMetaOptionsDto.html":{},"classes/CreatePostDto.html":{},"classes/CreateUserDto.html":{},"classes/GetUsersParamDto.html":{},"classes/PatchPostDto.html":{},"injectables/PostServices.html":{},"controllers/PostsController.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{},"coverage.html":{}}}],["types",{"_index":250,"title":{},"body":{"classes/PatchUserDto.html":{},"dependencies.html":{}}}],["typescript",{"_index":447,"title":{},"body":{"index.html":{}}}],["undefined})@isoptional()@isarray()@validatenested({each",{"_index":138,"title":{},"body":{"classes/CreatePostDto.html":{}}}],["unit",{"_index":463,"title":{},"body":{"index.html":{}}}],["unlicensed",{"_index":571,"title":{},"body":{"properties.html":{}}}],["update",{"_index":288,"title":{},"body":{"controllers/PostsController.html":{}}}],["updated",{"_index":245,"title":{},"body":{"classes/PatchPostDto.html":{},"controllers/PostsController.html":{}}}],["updated'})@isint",{"_index":240,"title":{},"body":{"classes/PatchPostDto.html":{}}}],["updatepost",{"_index":272,"title":{},"body":{"controllers/PostsController.html":{}}}],["updatepost(@body",{"_index":310,"title":{},"body":{"controllers/PostsController.html":{}}}],["updatepost(patchpostsdto",{"_index":287,"title":{},"body":{"controllers/PostsController.html":{}}}],["updates",{"_index":534,"title":{},"body":{"index.html":{}}}],["url",{"_index":161,"title":{},"body":{"classes/CreatePostDto.html":{}}}],["user",{"_index":42,"title":{},"body":{"modules/AppModule.html":{},"classes/GetUsersParamDto.html":{},"injectables/PostServices.html":{},"controllers/UsersController.html":{}}}],["user.dto",{"_index":251,"title":{},"body":{"classes/PatchUserDto.html":{},"controllers/UsersController.html":{}}}],["user.dto.ts",{"_index":205,"title":{},"body":{"classes/CreateUserDto.html":{},"classes/PatchUserDto.html":{},"coverage.html":{}}}],["user.dto.ts:16",{"_index":211,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["user.dto.ts:22",{"_index":213,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["user.dto.ts:26",{"_index":209,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["user.dto.ts:34",{"_index":222,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["userid",{"_index":259,"title":{},"body":{"injectables/PostServices.html":{},"controllers/PostsController.html":{}}}],["users",{"_index":96,"title":{},"body":{"injectables/AuthService.html":{},"classes/GetUsersParamDto.html":{},"injectables/PostServices.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{},"coverage.html":{}}}],["users.controller",{"_index":372,"title":{},"body":{"modules/UsersModule.html":{}}}],["users/users.module",{"_index":39,"title":{},"body":{"modules/AppModule.html":{}}}],["userscontroller",{"_index":317,"title":{"controllers/UsersController.html":{}},"body":{"controllers/UsersController.html":{},"modules/UsersModule.html":{},"coverage.html":{}}}],["userservice",{"_index":83,"title":{},"body":{"injectables/AuthService.html":{},"controllers/UsersController.html":{}}}],["usersmodule",{"_index":32,"title":{"modules/UsersModule.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/PostsModule.html":{},"modules/UsersModule.html":{},"modules.html":{},"overview.html":{}}}],["usersservice",{"_index":77,"title":{"injectables/UsersService.html":{}},"body":{"injectables/AuthService.html":{},"injectables/PostServices.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"coverage.html":{},"overview.html":{}}}],["using",{"_index":527,"title":{},"body":{"index.html":{}}}],["validatenested",{"_index":185,"title":{},"body":{"classes/CreatePostDto.html":{}}}],["validation",{"_index":156,"title":{},"body":{"classes/CreatePostDto.html":{}}}],["validationpipe",{"_index":348,"title":{},"body":{"controllers/UsersController.html":{}}}],["validator",{"_index":114,"title":{},"body":{"classes/CreateMetaOptionsDto.html":{},"classes/CreatePostDto.html":{},"classes/CreateUserDto.html":{},"classes/GetUsersParamDto.html":{},"classes/PatchPostDto.html":{},"dependencies.html":{}}}],["value",{"_index":107,"title":{},"body":{"classes/CreateMetaOptionsDto.html":{},"classes/CreatePostDto.html":{},"miscellaneous/enumerations.html":{}}}],["values",{"_index":144,"title":{},"body":{"classes/CreatePostDto.html":{}}}],["version",{"_index":569,"title":{},"body":{"properties.html":{}}}],["video",{"_index":519,"title":{},"body":{"index.html":{}}}],["visit",{"_index":508,"title":{},"body":{"index.html":{}}}],["visualize",{"_index":522,"title":{},"body":{"index.html":{}}}],["void",{"_index":283,"title":{},"body":{"controllers/PostsController.html":{}}}],["watch",{"_index":457,"title":{},"body":{"index.html":{}}}],["website",{"_index":558,"title":{},"body":{"index.html":{}}}],["working",{"_index":507,"title":{},"body":{"index.html":{}}}],["world",{"_index":56,"title":{},"body":{"injectables/AppService.html":{}}}],["x",{"_index":536,"title":{},"body":{"index.html":{}}}],["ye",{"_index":265,"title":{},"body":{"injectables/PostServices.html":{}}}],["you'd",{"_index":550,"title":{},"body":{"index.html":{}}}],["you're",{"_index":468,"title":{},"body":{"index.html":{}}}],["z])(?=.*[a",{"_index":215,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["z]).{8",{"_index":216,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["zoalala",{"_index":266,"title":{},"body":{"injectables/PostServices.html":{}}}],["zoom",{"_index":33,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/PostsModule.html":{},"modules/UsersModule.html":{},"overview.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"controllers/AppController.html":{"url":"controllers/AppController.html","title":"controller - AppController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  AppController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app.controller.ts\n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Controller, Get } from '@nestjs/common';\nimport { AppService } from './app.service';\n\n@Controller()\nexport class AppController {\n  constructor(private readonly appService: AppService) {}\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AppModule.html":{"url":"modules/AppModule.html","title":"module - AppModule","body":"\n                   \n\n\n\n\n    Modules\n    AppModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppModule\n\n\n\ncluster_AppModule_providers\n\n\n\ncluster_AppModule_imports\n\n\n\n\nAuthModule\n\nAuthModule\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAuthModule->AppModule\n\n\n\n\n\nPostsModule\n\nPostsModule\n\nAppModule -->\n\nPostsModule->AppModule\n\n\n\n\n\nUsersModule\n\nUsersModule\n\nAppModule -->\n\nUsersModule->AppModule\n\n\n\n\n\nAppService\n\nAppService\n\nAppModule -->\n\nAppService->AppModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            AppService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            AppController\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            AuthModule\n                        \n                        \n                            PostsModule\n                        \n                        \n                            UsersModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { AppController } from './app.controller';\nimport { AppService } from './app.service';\nimport { UsersModule } from './users/users.module';\nimport { PostsModule } from './posts/posts.module';\nimport { AuthModule } from './auth/auth.module';\n\n/*\n* user created modules\n\n*/\n\n@Module({\n  imports: [UsersModule, PostsModule, AuthModule],\n  controllers: [AppController],\n  providers: [AppService],\n})\nexport class AppModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AppService.html":{"url":"injectables/AppService.html","title":"injectable - AppService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  AppService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getHello\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        getHello\n                        \n                    \n                \n            \n            \n                \ngetHello()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app.service.ts:5\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         string\n\n                        \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\n\n@Injectable()\nexport class AppService {\n  getHello(): string {\n    return 'Hello World!';\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/AuthController.html":{"url":"controllers/AuthController.html","title":"controller - AuthController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  AuthController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/auth.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                auth\n            \n\n\n\n\n\n\n\n    \n\n\n    \n        import { Controller } from '@nestjs/common';\nimport { AuthService } from './providers/auth.service';\n\n@Controller('auth')\nexport class AuthController {\n  constructor(private readonly authService: AuthService) {}\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AuthModule.html":{"url":"modules/AuthModule.html","title":"module - AuthModule","body":"\n                   \n\n\n\n\n    Modules\n    AuthModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AuthModule\n\n\n\ncluster_AuthModule_exports\n\n\n\ncluster_AuthModule_providers\n\n\n\n\nAuthService \n\nAuthService \n\n\n\nAuthModule\n\nAuthModule\n\nAuthService  -->\n\nAuthModule->AuthService \n\n\n\n\n\nAuthService\n\nAuthService\n\nAuthModule -->\n\nAuthService->AuthModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/auth/auth.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            AuthService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            AuthController\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            AuthService\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module, forwardRef } from '@nestjs/common';\nimport { AuthController } from './auth.controller';\nimport { UsersModule } from 'src/users/users.module';\nimport { AuthService } from './providers/auth.service';\n\n@Module({\n  controllers: [AuthController],\n  providers: [AuthService],\n  imports: [forwardRef(() => UsersModule)],\n  exports: [AuthService],\n})\nexport class AuthModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AuthService.html":{"url":"injectables/AuthService.html","title":"injectable - AuthService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  AuthService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/providers/auth.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                isAuth\n                            \n                            \n                                    Public\n                                login\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(userService: UsersService)\n                    \n                \n                        \n                            \n                                Defined in src/auth/providers/auth.service.ts:5\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        userService\n                                                  \n                                                        \n                                                                        UsersService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        isAuth\n                        \n                    \n                \n            \n            \n                \n                        \n                    isAuth()\n                \n            \n\n\n                    \n                        \n                            Defined in src/auth/providers/auth.service.ts:16\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         boolean\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        login\n                        \n                    \n                \n            \n            \n                \n                        \n                    login(email: string, password: string, id: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/auth/providers/auth.service.ts:11\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                email\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                password\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         string\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable, Inject, forwardRef } from '@nestjs/common';\nimport { UsersService } from 'src/users/providers/users.service';\n\n@Injectable()\nexport class AuthService {\n  constructor(\n    @Inject(forwardRef(() => UsersService))\n    private readonly userService: UsersService,\n  ) {}\n\n  public login(email: string, password: string, id: string) {\n    const users = this.userService.findOnebyId('1234');\n\n    return 'SAMPLE_TOKEN';\n  }\n  public isAuth() {\n    return true;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateMetaOptionsDto.html":{"url":"classes/CreateMetaOptionsDto.html","title":"class - CreateMetaOptionsDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateMetaOptionsDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/posts/dtos/create-post-metaoptions.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                key\n                            \n                            \n                                    \n                                value\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        key\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/posts/dtos/create-post-metaoptions.dto.ts:6\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        value\n                        \n                    \n                \n            \n                \n                    \n                        Type :         any\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/posts/dtos/create-post-metaoptions.dto.ts:9\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { IsNotEmpty, IsString } from 'class-validator';\n\nexport class CreateMetaOptionsDto {\n  @IsString()\n  @IsNotEmpty()\n  key: string;\n\n  @IsNotEmpty()\n  value: any;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreatePostDto.html":{"url":"classes/CreatePostDto.html","title":"class - CreatePostDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreatePostDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/posts/dtos/create-post.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    \n                                    \n                                    Optional\n                                content\n                            \n                            \n                                    \n                                    \n                                    \n                                    \n                                    Optional\n                                featuredImageUrl\n                            \n                            \n                                    \n                                    \n                                    \n                                    \n                                    \n                                    Optional\n                                metaOptions\n                            \n                            \n                                    \n                                    \n                                    \n                                postType\n                            \n                            \n                                    \n                                    \n                                    Optional\n                                publishOn\n                            \n                            \n                                    \n                                    \n                                    \n                                schema\n                            \n                            \n                                    \n                                    \n                                    \n                                    \n                                slug\n                            \n                            \n                                    \n                                    \n                                    \n                                status\n                            \n                            \n                                    \n                                    \n                                    \n                                    \n                                    \n                                    Optional\n                                tags\n                            \n                            \n                                    \n                                    \n                                    \n                                    \n                                    \n                                title\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                            Optional\n                        content\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty()@IsString()@IsOptional()@ApiPropertyOptional({description: 'this is the content of the post'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/posts/dtos/create-post.dto.ts:64\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                            Optional\n                        featuredImageUrl\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@IsOptional()@IsUrl()@ApiPropertyOptional({description: 'Feature Image for your post'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/posts/dtos/create-post.dto.ts:80\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                            \n                            Optional\n                        metaOptions\n                        \n                    \n                \n            \n                \n                    \n                        Type :         CreateMetaOptionsDto[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiPropertyOptional({type: 'array', required: false, items: undefined})@IsOptional()@IsArray()@ValidateNested({each: true})@Type(undefined)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/posts/dtos/create-post.dto.ts:112\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        postType\n                        \n                    \n                \n            \n                \n                    \n                        Type :         postType\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({enum: postType, description: 'Possible Values: 'post', 'page', 'story', 'series''})@IsNotEmpty()@IsEnum(postType)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/posts/dtos/create-post.dto.ts:39\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Optional\n                        publishOn\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsISO8601()@IsOptional()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/posts/dtos/create-post.dto.ts:84\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        schema\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiPropertyOptional({description: 'Serialize your JSON object else a validation error will be thrown'})@IsOptional()@IsJSON()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/posts/dtos/create-post.dto.ts:72\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                        slug\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@IsNotEmpty()@MinLength(6)@ApiProperty({example: 'my url'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/posts/dtos/create-post.dto.ts:47\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        status\n                        \n                    \n                \n            \n                \n                    \n                        Type :         status\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsEnum(status)@IsNotEmpty()@ApiProperty({enum: status, description: 'Possible status are: 'draft', 'scheduled', 'review', 'published''})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/posts/dtos/create-post.dto.ts:56\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                            \n                            Optional\n                        tags\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiPropertyOptional()@IsOptional()@IsArray()@IsString({each: true})@MinLength(3, {each: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/posts/dtos/create-post.dto.ts:91\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                            \n                        title\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@IsNotEmpty()@MinLength(3)@MaxLength(90)@ApiProperty({example: 'This is title', description: 'This is the title for Post'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/posts/dtos/create-post.dto.ts:31\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import {\n  IsArray,\n  IsDate,\n  IsEnum,\n  IsISO8601,\n  IsJSON,\n  IsNotEmpty,\n  IsOptional,\n  IsString,\n  IsUrl,\n  Matches,\n  MaxLength,\n  MinLength,\n  ValidateNested,\n} from 'class-validator';\nimport { Type } from 'class-transformer';\nimport { postType } from '../enums/postType.enum';\nimport { status } from '../enums/status.enum';\nimport { CreateMetaOptionsDto } from './create-post-metaoptions.dto';\nimport { ApiProperty, ApiPropertyOptional } from '@nestjs/swagger';\n\nexport class CreatePostDto {\n  @IsString()\n  @IsNotEmpty()\n  @MinLength(3)\n  @MaxLength(90)\n  @ApiProperty({\n    example: 'This is title',\n    description: 'This is the title for Post',\n  })\n  title: string;\n\n  @ApiProperty({\n    enum: postType,\n    description: \"Possible Values: 'post', 'page', 'story', 'series'\",\n  })\n  @IsNotEmpty()\n  @IsEnum(postType)\n  postType: postType;\n\n  @IsString()\n  @IsNotEmpty()\n  @MinLength(6)\n  @ApiProperty({\n    example: 'my url',\n  })\n  slug: string;\n\n  @IsEnum(status)\n  @IsNotEmpty()\n  @ApiProperty({\n    enum: status,\n    description:\n      \"Possible status are: 'draft', 'scheduled', 'review', 'published'\",\n  })\n  status: status;\n\n  @IsNotEmpty()\n  @IsString()\n  @IsOptional()\n  @ApiPropertyOptional({\n    description: 'this is the content of the post',\n  })\n  content?: string;\n\n  @ApiPropertyOptional({\n    description:\n      'Serialize your JSON object else a validation error will be thrown',\n  })\n  @IsOptional()\n  @IsJSON()\n  schema: string;\n\n  @IsString()\n  @IsOptional()\n  @IsUrl()\n  @ApiPropertyOptional({\n    description: 'Feature Image for your post',\n  })\n  featuredImageUrl?: string;\n\n  @IsISO8601()\n  @IsOptional()\n  publishOn?: Date;\n\n  @ApiPropertyOptional()\n  @IsOptional()\n  @IsArray()\n  @IsString({ each: true })\n  @MinLength(3, { each: true })\n  tags?: string[];\n\n  @ApiPropertyOptional({\n    type: 'array',\n    required: false,\n    items: {\n      type: 'object',\n      properties: {\n        key: {\n          type: 'string',\n        },\n        value: {\n          type: 'string',\n        },\n      },\n    },\n  })\n  @IsOptional()\n  @IsArray()\n  @ValidateNested({ each: true })\n  @Type(() => CreateMetaOptionsDto)\n  metaOptions?: CreateMetaOptionsDto[];\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateUserDto.html":{"url":"classes/CreateUserDto.html","title":"class - CreateUserDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateUserDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/users/dtos/create-user.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                email\n                            \n                            \n                                    \n                                    \n                                    \n                                    \n                                firstName\n                            \n                            \n                                    \n                                    \n                                    \n                                    \n                                lastName\n                            \n                            \n                                    \n                                    \n                                    \n                                    \n                                password\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        email\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty()@IsEmail()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/dtos/create-user.dto.ts:26\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                        firstName\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@IsNotEmpty()@MinLength(3)@MaxLength(90)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/dtos/create-user.dto.ts:16\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                        lastName\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@IsOptional()@MinLength(3)@MaxLength(90)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/dtos/create-user.dto.ts:22\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                        password\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@IsNotEmpty()@MinLength(8)@Matches(/^(?=.*\\d)(?=.*[!@#$%^&*])(?=.*[a-z])(?=.*[A-Z]).{8,}$/, {message: 'Minumum 8 Letters, at least a number'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/dtos/create-user.dto.ts:34\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import {\n  IsEmail,\n  IsNotEmpty,\n  IsOptional,\n  IsString,\n  Matches,\n  MaxLength,\n  MinLength,\n} from 'class-validator';\n\nexport class CreateUserDto {\n  @IsString()\n  @IsNotEmpty()\n  @MinLength(3)\n  @MaxLength(90)\n  firstName: string;\n\n  @IsString()\n  @IsOptional()\n  @MinLength(3)\n  @MaxLength(90)\n  lastName: string;\n\n  @IsNotEmpty()\n  @IsEmail()\n  email: string;\n\n  @IsString()\n  @IsNotEmpty()\n  @MinLength(8)\n  @Matches(/^(?=.*\\d)(?=.*[!@#$%^&*])(?=.*[a-z])(?=.*[A-Z]).{8,}$/, {\n    message: 'Minumum 8 Letters, at least a number',\n  })\n  password: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/GetUsersParamDto.html":{"url":"classes/GetUsersParamDto.html","title":"class - GetUsersParamDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  GetUsersParamDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/users/dtos/get-users-param.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    \n                                    \n                                    Optional\n                                id\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                            Optional\n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiPropertyOptional({description: 'Get user with a specific ID', example: 1234})@IsOptional()@IsInt()@Type(undefined)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/dtos/get-users-param.dto.ts:13\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { IsInt, IsOptional } from 'class-validator';\nimport { Type } from 'class-transformer';\nimport { ApiPropertyOptional } from '@nestjs/swagger';\n\nexport class GetUsersParamDto {\n  @ApiPropertyOptional({\n    description: 'Get user with a specific ID',\n    example: 1234,\n  })\n  @IsOptional()\n  @IsInt()\n  @Type(() => Number)\n  id?: number;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/PatchPostDto.html":{"url":"classes/PatchPostDto.html","title":"class - PatchPostDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  PatchPostDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/posts/dtos/patch-post.dto.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                            PartialType(CreatePostDto)\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                id\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'The Id of the post that need to be updated'})@IsInt()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/posts/dtos/patch-post.dto.ts:10\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty, PartialType } from '@nestjs/swagger';\nimport { IsIn, IsInt } from 'class-validator';\nimport { CreatePostDto } from './create-post.dto';\n\nexport class PatchPostDto extends PartialType(CreatePostDto) {\n  @ApiProperty({\n    description: 'The Id of the post that need to be updated',\n  })\n  @IsInt()\n  id: number;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/PatchUserDto.html":{"url":"classes/PatchUserDto.html","title":"class - PatchUserDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  PatchUserDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/users/dtos/patch-user.dto.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                            PartialType(CreateUserDto)\n            \n\n\n\n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { PartialType } from '@nestjs/mapped-types';\nimport { CreateUserDto } from './create-user.dto';\n\nexport class PatchUserDto extends PartialType(CreateUserDto) {}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/PostServices.html":{"url":"injectables/PostServices.html","title":"injectable - PostServices","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  PostServices\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/posts/providers/posts.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                findAll\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(usersService: UsersService)\n                    \n                \n                        \n                            \n                                Defined in src/posts/providers/posts.service.ts:5\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        usersService\n                                                  \n                                                        \n                                                                        UsersService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        findAll\n                        \n                    \n                \n            \n            \n                \n                        \n                    findAll(userId: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/posts/providers/posts.service.ts:10\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                userId\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     {}\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { UsersService } from 'src/users/providers/users.service';\n\n@Injectable()\nexport class PostServices {\n  constructor(\n    //injecting user service\n    private readonly usersService: UsersService,\n  ) {}\n  public findAll(userId: string) {\n    const user = this.usersService.findOnebyId(userId);\n    // users service\n    return [\n      {\n        user: user,\n        title: 'asdfasdf',\n        content: 'habijabi',\n      },\n      {\n        user: user,\n        title: 'ye',\n        content: 'zoalala',\n      },\n    ];\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/PostsController.html":{"url":"controllers/PostsController.html","title":"controller - PostsController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  PostsController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/posts/posts.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                posts\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    \n                                    Public\n                                createPost\n                            \n                            \n                                    \n                                    Public\n                                getPosts\n                            \n                            \n                                    \n                                    \n                                    \n                                    Public\n                                updatePost\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Public\n                        createPost\n                        \n                    \n                \n            \n            \n                \n                        \n                    createPost(createPostDto: CreatePostDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @ApiOperation({summary: 'Creates a new blog Post'})@ApiResponse({status: 201, description: 'You created a 201 response successfully'})@Post()\n                \n            \n\n                    \n                        \n                            Defined in src/posts/posts.controller.ts:25\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                createPostDto\n                                            \n                                                            CreatePostDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Public\n                        getPosts\n                        \n                    \n                \n            \n            \n                \n                        \n                    getPosts(userId: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get('/:userId?')\n                \n            \n\n                    \n                        \n                            Defined in src/posts/posts.controller.ts:13\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                userId\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Public\n                        updatePost\n                        \n                    \n                \n            \n            \n                \n                        \n                    updatePost(patchPostsDto: PatchPostDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @ApiOperation({summary: 'Update a new blog post'})@ApiResponse({status: 201, description: 'Updated successfully'})@Patch()\n                \n            \n\n                    \n                        \n                            Defined in src/posts/posts.controller.ts:37\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                patchPostsDto\n                                            \n                                                            PatchPostDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n\n\n    \n        import { Controller, Get, Param, Post, Body, Patch } from '@nestjs/common';\nimport { PostServices } from './providers/posts.service';\nimport { ApiOperation, ApiResponse, ApiTags } from '@nestjs/swagger';\nimport { CreatePostDto } from './dtos/create-post.dto';\nimport { PatchPostDto } from './dtos/patch-post.dto';\n\n@Controller('posts')\n@ApiTags('Posts')\nexport class PostsController {\n  constructor(private readonly postsServices: PostServices) {}\n\n  @Get('/:userId?')\n  public getPosts(@Param('userId') userId: string) {\n    return this.postsServices.findAll(userId);\n  }\n\n  @ApiOperation({\n    summary: 'Creates a new blog Post',\n  })\n  @ApiResponse({\n    status: 201,\n    description: 'You created a 201 response successfully',\n  })\n  @Post()\n  public createPost(@Body() createPostDto: CreatePostDto) {\n    console.log(createPostDto);\n  }\n\n  @ApiOperation({\n    summary: 'Update a new blog post',\n  })\n  @ApiResponse({\n    status: 201,\n    description: 'Updated successfully',\n  })\n  @Patch()\n  public updatePost(@Body() patchPostsDto: PatchPostDto) {\n    console.log(patchPostsDto);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/PostsModule.html":{"url":"modules/PostsModule.html","title":"module - PostsModule","body":"\n                   \n\n\n\n\n    Modules\n    PostsModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_PostsModule\n\n\n\ncluster_PostsModule_imports\n\n\n\ncluster_PostsModule_providers\n\n\n\n\nUsersModule\n\nUsersModule\n\n\n\nPostsModule\n\nPostsModule\n\nPostsModule -->\n\nUsersModule->PostsModule\n\n\n\n\n\nPostServices\n\nPostServices\n\nPostsModule -->\n\nPostServices->PostsModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/posts/posts.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            PostServices\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            PostsController\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            UsersModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { PostsController } from './posts.controller';\nimport { PostServices } from './providers/posts.service';\nimport { UsersModule } from 'src/users/users.module';\n\n@Module({\n  controllers: [PostsController],\n  providers: [PostServices],\n  imports: [UsersModule],\n})\nexport class PostsModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/UsersController.html":{"url":"controllers/UsersController.html","title":"controller - UsersController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  UsersController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/users/users.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                users\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    Public\n                                createUser\n                            \n                            \n                                    \n                                    \n                                    \n                                    \n                                    \n                                    Public\n                                getUsers\n                            \n                            \n                                    \n                                    Public\n                                patchUser\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Public\n                        createUser\n                        \n                    \n                \n            \n            \n                \n                        \n                    createUser(createUserDto: CreateUserDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post()\n                \n            \n\n                    \n                        \n                            Defined in src/users/users.controller.ts:62\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                createUserDto\n                                            \n                                                            CreateUserDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         string\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                            \n                            Public\n                        getUsers\n                        \n                    \n                \n            \n            \n                \n                        \n                    getUsers(getUsersParamDto: GetUsersParamDto, limit: number, page: number)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get('/:id?')@ApiResponse({status: 200, description: 'User Fetched successfully'})@ApiOperation({summary: 'Fetches a list of regustered users on the application '})@ApiQuery({name: 'limit', type: 'Number', required: false, description: 'A description', example: 10})@ApiQuery({name: 'page', type: 'Number', required: false, description: 'A description', example: 1})\n                \n            \n\n                    \n                        \n                            Defined in src/users/users.controller.ts:52\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                getUsersParamDto\n                                            \n                                                            GetUsersParamDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                limit\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                page\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Public\n                        patchUser\n                        \n                    \n                \n            \n            \n                \n                        \n                    patchUser(pathcUserDto: PatchUserDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Patch()\n                \n            \n\n                    \n                        \n                            Defined in src/users/users.controller.ts:69\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                pathcUserDto\n                                            \n                                                            PatchUserDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         PatchUserDto\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n\n\n    \n        import {\n  Controller,\n  Get,\n  Post,\n  Patch,\n  Put,\n  Delete,\n  Param,\n  Query,\n  Body,\n  Headers,\n  Ip,\n  ParseIntPipe,\n  DefaultValuePipe,\n  ValidationPipe,\n} from '@nestjs/common';\nimport { CreateUserDto } from './dtos/create-user.dto';\nimport { GetUsersParamDto } from './dtos/get-users-param.dto';\nimport { PatchUserDto } from './dtos/patch-user.dto';\nimport { UsersService } from './providers/users.service';\nimport { ApiOperation, ApiQuery, ApiResponse, ApiTags } from '@nestjs/swagger';\n@Controller('users')\n@ApiTags('Users')\nexport class UsersController {\n  constructor(\n    //injecting\n    private readonly userService: UsersService,\n  ) {}\n\n  @Get('/:id?')\n  @ApiResponse({\n    status: 200,\n    description: 'User Fetched successfully',\n  })\n  @ApiOperation({\n    summary: 'Fetches a list of regustered users on the application ',\n  })\n  @ApiQuery({\n    name: 'limit',\n    type: 'Number',\n    required: false,\n    description: 'A description',\n    example: 10,\n  })\n  @ApiQuery({\n    name: 'page',\n    type: 'Number',\n    required: false,\n    description: 'A description',\n    example: 1,\n  })\n  public getUsers(\n    @Param() getUsersParamDto: GetUsersParamDto,\n    @Query('limit', new DefaultValuePipe(10), ParseIntPipe) limit: number,\n    @Query('page', new DefaultValuePipe(1), ParseIntPipe) page: number,\n  ) {\n    return this.userService.findAll(getUsersParamDto, limit, page);\n    //return this.userService.findOnebyId(2);\n  }\n\n  @Post()\n  public createUser(@Body() createUserDto: CreateUserDto) {\n    console.log(createUserDto);\n\n    return 'You sent a post request';\n  }\n\n  @Patch()\n  public patchUser(@Body() pathcUserDto: PatchUserDto) {\n    return pathcUserDto;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/UsersModule.html":{"url":"modules/UsersModule.html","title":"module - UsersModule","body":"\n                   \n\n\n\n\n    Modules\n    UsersModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_UsersModule\n\n\n\ncluster_UsersModule_exports\n\n\n\ncluster_UsersModule_providers\n\n\n\n\nUsersService \n\nUsersService \n\n\n\nUsersModule\n\nUsersModule\n\nUsersService  -->\n\nUsersModule->UsersService \n\n\n\n\n\nUsersService\n\nUsersService\n\nUsersModule -->\n\nUsersService->UsersModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/users/users.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            UsersService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            UsersController\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            UsersService\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module, forwardRef } from '@nestjs/common';\nimport { UsersController } from './users.controller';\nimport { UsersService } from './providers/users.service';\nimport { AuthModule } from 'src/auth/auth.module';\n\n@Module({\n  controllers: [UsersController],\n  providers: [UsersService],\n  exports: [UsersService],\n  imports: [forwardRef(() => AuthModule)],\n})\nexport class UsersModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/UsersService.html":{"url":"injectables/UsersService.html","title":"injectable - UsersService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  UsersService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/users/providers/users.service.ts\n        \n\n\n            \n                Description\n            \n            \n                class to connect to users table\n\n            \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                findAll\n                            \n                            \n                                    Public\n                                findOnebyId\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(authService: AuthService)\n                    \n                \n                        \n                            \n                                Defined in src/users/providers/users.service.ts:10\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        authService\n                                                  \n                                                        \n                                                                        AuthService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        findAll\n                        \n                    \n                \n            \n            \n                \n                        \n                    findAll(getUsersParamDto: GetUsersParamDto, limit: number, page: Number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/users/providers/users.service.ts:20\n                        \n                    \n\n\n            \n                \n                        find all users\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                getUsersParamDto\n                                            \n                                                            GetUsersParamDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                limit\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                page\n                                            \n                                                            Number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     {}\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        findOnebyId\n                        \n                    \n                \n            \n            \n                \n                        \n                    findOnebyId(id: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/users/providers/users.service.ts:45\n                        \n                    \n\n\n            \n                \n                        find all users by id\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     { firstName: string; email: string; id: number; }\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable, Inject, forwardRef } from '@nestjs/common';\nimport { GetUsersParamDto } from '../dtos/get-users-param.dto';\nimport { AuthService } from 'src/auth/providers/auth.service';\n\n/**\n *\n * class to connect to users table\n */\n@Injectable()\nexport class UsersService {\n  constructor(\n    @Inject(forwardRef(() => AuthService))\n    private readonly authService: AuthService,\n  ) {}\n\n  /**\n   *\n   * find all users\n   */\n  public findAll(\n    getUsersParamDto: GetUsersParamDto,\n    limit: number,\n    page: Number,\n  ) {\n    const isAuth = this.authService.isAuth();\n    console.log(isAuth);\n\n    return [\n      {\n        firstName: 'jhon',\n        email: ' habijabi@email.com',\n        id: 233,\n      },\n      {\n        firstName: 'mota',\n        email: ' motu@email.com',\n        id: 232,\n      },\n    ];\n  }\n  /**\n   *\n   * find all users by id\n   */\n  public findOnebyId(id: string) {\n    return {\n      firstName: 'jhon',\n      email: ' habijabi@email.com',\n      id: 2,\n    };\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                src/app.controller.ts\n            \n            controller\n            AppController\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app.service.ts\n            \n            injectable\n            AppService\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/auth/auth.controller.ts\n            \n            controller\n            AuthController\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/auth/providers/auth.service.ts\n            \n            injectable\n            AuthService\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/main.ts\n            \n            function\n            bootstrap\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/posts/dtos/create-post-metaoptions.dto.ts\n            \n            class\n            CreateMetaOptionsDto\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/posts/dtos/create-post.dto.ts\n            \n            class\n            CreatePostDto\n            \n                0 %\n                (0/11)\n            \n        \n        \n            \n                \n                src/posts/dtos/patch-post.dto.ts\n            \n            class\n            PatchPostDto\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/posts/posts.controller.ts\n            \n            controller\n            PostsController\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/posts/providers/posts.service.ts\n            \n            injectable\n            PostServices\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/users/dtos/create-user.dto.ts\n            \n            class\n            CreateUserDto\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/users/dtos/get-users-param.dto.ts\n            \n            class\n            GetUsersParamDto\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/users/dtos/patch-user.dto.ts\n            \n            class\n            PatchUserDto\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/users/providers/users.service.ts\n            \n            injectable\n            UsersService\n            \n                75 %\n                (3/4)\n            \n        \n        \n            \n                \n                src/users/users.controller.ts\n            \n            controller\n            UsersController\n            \n                0 %\n                (0/4)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @compodoc/compodoc : ^1.1.23\n        \n            @nestjs/common : ^10.0.0\n        \n            @nestjs/core : ^10.0.0\n        \n            @nestjs/mapped-types : ^2.0.5\n        \n            @nestjs/platform-express : ^10.0.0\n        \n            @nestjs/swagger : ^7.3.0\n        \n            class-transformer : ^0.5.1\n        \n            class-validator : ^0.14.1\n        \n            reflect-metadata : ^0.2.0\n        \n            rxjs : ^7.8.1\n    \n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/enumerations.html":{"url":"miscellaneous/enumerations.html","title":"miscellaneous-enumerations - enumerations","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Enumerations\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            postType   (src/.../postType.enum.ts)\n                        \n                        \n                            status   (src/.../status.enum.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/posts/enums/postType.enum.ts\n    \n        \n            \n                \n                    \n                        \n                        postType\n                    \n                \n                        \n                            \n                                 POST\n                            \n                        \n                        \n                            \n                                Value : post\n                            \n                        \n                        \n                            \n                                 PAGE\n                            \n                        \n                        \n                            \n                                Value : page\n                            \n                        \n                        \n                            \n                                 STORY\n                            \n                        \n                        \n                            \n                                Value : story\n                            \n                        \n                        \n                            \n                                 SERIES\n                            \n                        \n                        \n                            \n                                Value : series\n                            \n                        \n            \n        \n\n    src/posts/enums/status.enum.ts\n    \n        \n            \n                \n                    \n                        \n                        status\n                    \n                \n                        \n                            \n                                 DRAFT\n                            \n                        \n                        \n                            \n                                Value : draft\n                            \n                        \n                        \n                            \n                                 SCHEDULED\n                            \n                        \n                        \n                            \n                                Value : scheduled\n                            \n                        \n                        \n                            \n                                 REVIEW\n                            \n                        \n                        \n                            \n                                Value : review\n                            \n                        \n                        \n                            \n                                 PUBLISHED\n                            \n                        \n                        \n                            \n                                Value : published\n                            \n                        \n            \n        \n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/functions.html":{"url":"miscellaneous/functions.html","title":"miscellaneous-functions - functions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Functions\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            bootstrap   (src/.../main.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/main.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        bootstrap\n                        \n                    \n                \n            \n            \n                \nbootstrap()\n                \n            \n\n\n\n\n        \n    \n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\n\n  \n\n\n  A progressive Node.js framework for building efficient and scalable server-side applications.\n    \n\n\n\n\n\n\n\n\n  \n    \n  \n\n  \n\nDescription\nNest framework TypeScript starter repository.\nProject setup\nExample :$ npm installCompile and run the project\nExample :# development\n$ npm run start\n\n# watch mode\n$ npm run start:dev\n\n# production mode\n$ npm run start:prodRun tests\nExample :# unit tests\n$ npm run test\n\n# e2e tests\n$ npm run test:e2e\n\n# test coverage\n$ npm run test:covDeployment\nWhen you're ready to deploy your NestJS application to production, there are some key steps you can take to ensure it runs as efficiently as possible. Check out the deployment documentation for more information.\nIf you are looking for a cloud-based platform to deploy your NestJS application, check out Mau, our official platform for deploying NestJS applications on AWS. Mau makes deployment straightforward and fast, requiring just a few simple steps:\nExample :$ npm install -g mau\n$ mau deployWith Mau, you can deploy your application in just a few clicks, allowing you to focus on building features rather than managing infrastructure.\nResources\nCheck out a few resources that may come in handy when working with NestJS:\n\nVisit the NestJS Documentation to learn more about the framework.\nFor questions and support, please visit our Discord channel.\nTo dive deeper and get more hands-on experience, check out our official video courses.\nDeploy your application to AWS with the help of NestJS Mau in just a few clicks.\nVisualize your application graph and interact with the NestJS application in real-time using NestJS Devtools.\nNeed help with your project (part-time to full-time)? Check out our official enterprise support.\nTo stay in the loop and get updates, follow us on X and LinkedIn.\nLooking for a job, or have a job to offer? Check out our official Jobs board.\n\nSupport\nNest is an MIT-licensed open source project. It can grow thanks to the sponsors and support by the amazing backers. If you'd like to join them, please read more here.\nStay in touch\n\nAuthor - Kamil Myśliwiec\nWebsite - https://nestjs.com\nTwitter - @nestframework\n\nLicense\nNest is MIT licensed.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n            \n                \n                    \n                        AppModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        AuthModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        PostsModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        UsersModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n  \n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppModule\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AppModule_providers\n\n\n\ncluster_AuthModule\n\n\n\ncluster_AuthModule_exports\n\n\n\ncluster_AuthModule_providers\n\n\n\ncluster_PostsModule\n\n\n\ncluster_PostsModule_providers\n\n\n\ncluster_UsersModule\n\n\n\ncluster_UsersModule_exports\n\n\n\ncluster_UsersModule_providers\n\n\n\n\nAuthModule\n\nAuthModule\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAuthModule->AppModule\n\n\n\n\n\nAuthService \n\nAuthService \n\nAuthService  -->\n\nAuthModule->AuthService \n\n\n\n\n\nPostsModule\n\nPostsModule\n\nAppModule -->\n\nPostsModule->AppModule\n\n\n\n\n\nUsersModule\n\nUsersModule\n\nPostsModule -->\n\nUsersModule->PostsModule\n\n\n\nAppModule -->\n\nUsersModule->AppModule\n\n\n\n\n\nUsersService \n\nUsersService \n\nUsersService  -->\n\nUsersModule->UsersService \n\n\n\n\n\nAppService\n\nAppService\n\nAppModule -->\n\nAppService->AppModule\n\n\n\n\n\nAuthService\n\nAuthService\n\nAuthModule -->\n\nAuthService->AuthModule\n\n\n\n\n\nPostServices\n\nPostServices\n\nPostsModule -->\n\nPostServices->PostsModule\n\n\n\n\n\nUsersService\n\nUsersService\n\nUsersModule -->\n\nUsersService->UsersModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n  \n\n    \n        \n            \n                \n                    \n                    \n                        4 Modules\n                    \n                \n            \n        \n        \n            \n                \n                    \n                    4 Controllers\n                \n            \n        \n        \n            \n                \n                    \n                    4 Injectables\n                \n            \n        \n        \n            \n                \n                    \n                    6 Classes\n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"properties.html":{"url":"properties.html","title":"package-properties - properties","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Properties\n    \n    \n        \n            Version : 0.0.1\n        \n            Description : \n        \n            License : UNLICENSED\n        \n            Author : \n    \n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
